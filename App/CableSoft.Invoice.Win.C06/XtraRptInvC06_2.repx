/// <XRTypeInfo>
///   <AssemblyFullName>DevExpress.XtraReports.v10.1, Version=10.1.6.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a</AssemblyFullName>
///   <AssemblyLocation>C:\GICMIS\INVOICE\DevExpress.XtraReports.v10.1.dll</AssemblyLocation>
///   <TypeName>DevExpress.XtraReports.UI.XtraReport</TypeName>
///   <Localization>zh-TW</Localization>
///   <References>
///     <Reference Path="C:\WINDOWS\assembly\GAC_32\System.Data\2.0.0.0__b77a5c561934e089\System.Data.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\System\2.0.0.0__b77a5c561934e089\System.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\System.Configuration\2.0.0.0__b03f5f7f11d50a3a\System.Configuration.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\System.Xml\2.0.0.0__b77a5c561934e089\System.Xml.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\System.Data.SqlXml\2.0.0.0__b77a5c561934e089\System.Data.SqlXml.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\System.Security\2.0.0.0__b03f5f7f11d50a3a\System.Security.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\Microsoft.VisualC\8.0.0.0__b03f5f7f11d50a3a\Microsoft.VisualC.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_32\System.Transactions\2.0.0.0__b77a5c561934e089\System.Transactions.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_32\System.EnterpriseServices\2.0.0.0__b03f5f7f11d50a3a\System.EnterpriseServices.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\System.DirectoryServices\2.0.0.0__b03f5f7f11d50a3a\System.DirectoryServices.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\System.Runtime.Remoting\2.0.0.0__b77a5c561934e089\System.Runtime.Remoting.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_32\System.Web\2.0.0.0__b03f5f7f11d50a3a\System.Web.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\System.Drawing\2.0.0.0__b03f5f7f11d50a3a\System.Drawing.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\System.Web.Services\2.0.0.0__b03f5f7f11d50a3a\System.Web.Services.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\System.Design\2.0.0.0__b03f5f7f11d50a3a\System.Design.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\System.Windows.Forms\2.0.0.0__b77a5c561934e089\System.Windows.Forms.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\Accessibility\2.0.0.0__b03f5f7f11d50a3a\Accessibility.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\System.Runtime.Serialization.Formatters.Soap\2.0.0.0__b03f5f7f11d50a3a\System.Runtime.Serialization.Formatters.Soap.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\System.Deployment\2.0.0.0__b03f5f7f11d50a3a\System.Deployment.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\System.Drawing.Design\2.0.0.0__b03f5f7f11d50a3a\System.Drawing.Design.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_32\System.Data.OracleClient\2.0.0.0__b77a5c561934e089\System.Data.OracleClient.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\System.Web.RegularExpressions\2.0.0.0__b03f5f7f11d50a3a\System.Web.RegularExpressions.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\System.DirectoryServices.Protocols\2.0.0.0__b03f5f7f11d50a3a\System.DirectoryServices.Protocols.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\System.ServiceProcess\2.0.0.0__b03f5f7f11d50a3a\System.ServiceProcess.dll" />
///     <Reference Path="C:\WINDOWS\assembly\GAC_MSIL\System.Configuration.Install\2.0.0.0__b03f5f7f11d50a3a\System.Configuration.Install.dll" />
///   </References>
/// </XRTypeInfo>
namespace XtraReportSerialization {
    
    public class rptC06_Totals : DevExpress.XtraReports.UI.XtraReport {
        private DevExpress.XtraReports.UI.TopMarginBand TopMargin;
        private DevExpress.XtraReports.UI.DetailBand Detail;
        private DevExpress.XtraReports.UI.XRLabel label48;
        private DevExpress.XtraReports.UI.XRLabel label23;
        private DevExpress.XtraReports.UI.XRLabel label38;
        private DevExpress.XtraReports.UI.XRLabel label37;
        private DevExpress.XtraReports.UI.XRLabel label36;
        private DevExpress.XtraReports.UI.XRLabel label27;
        private DevExpress.XtraReports.UI.XRLabel label4;
        private DevExpress.XtraReports.UI.XRLabel label5;
        private DevExpress.XtraReports.UI.XRLabel label46;
        private DevExpress.XtraReports.UI.XRLabel label26;
        private DevExpress.XtraReports.UI.XRLabel label6;
        private DevExpress.XtraReports.UI.XRLabel label39;
        private DevExpress.XtraReports.UI.XRLabel label28;
        private DevExpress.XtraReports.UI.XRLabel label41;
        private DevExpress.XtraReports.UI.XRLabel label40;
        private DevExpress.XtraReports.UI.XRLabel label45;
        private DevExpress.XtraReports.UI.XRLabel label20;
        private DevExpress.XtraReports.UI.XRLabel label42;
        private DevExpress.XtraReports.UI.XRLabel label19;
        private DevExpress.XtraReports.UI.XRLabel label18;
        private DevExpress.XtraReports.UI.XRLabel label24;
        private DevExpress.XtraReports.UI.XRLabel label22;
        private DevExpress.XtraReports.UI.XRLabel label21;
        private DevExpress.XtraReports.UI.XRLabel label25;
        private DevExpress.XtraReports.UI.BottomMarginBand BottomMargin;
        private DevExpress.XtraReports.UI.ReportHeaderBand ReportHeader;
        private DevExpress.XtraReports.UI.XRLabel label47;
        private DevExpress.XtraReports.UI.PageHeaderBand PageHeader;
        private DevExpress.XtraReports.UI.XRLabel label43;
        private DevExpress.XtraReports.UI.XRLabel label35;
        private DevExpress.XtraReports.UI.XRLabel label31;
        private DevExpress.XtraReports.UI.XRLabel label30;
        private DevExpress.XtraReports.UI.XRLabel label29;
        private DevExpress.XtraReports.UI.XRLabel label13;
        private DevExpress.XtraReports.UI.XRLabel label1;
        private DevExpress.XtraReports.UI.XRLabel label2;
        private DevExpress.XtraReports.UI.XRLabel label44;
        private DevExpress.XtraReports.UI.XRLabel label12;
        private DevExpress.XtraReports.UI.XRLabel label3;
        private DevExpress.XtraReports.UI.XRLabel label32;
        private DevExpress.XtraReports.UI.XRLabel label14;
        private DevExpress.XtraReports.UI.XRLabel label34;
        private DevExpress.XtraReports.UI.XRLabel label33;
        private DevExpress.XtraReports.UI.XRLabel label9;
        private DevExpress.XtraReports.UI.XRLabel label8;
        private DevExpress.XtraReports.UI.XRLabel label7;
        private DevExpress.XtraReports.UI.XRLabel label17;
        private DevExpress.XtraReports.UI.XRLabel label16;
        private DevExpress.XtraReports.UI.XRLabel label15;
        private DevExpress.XtraReports.UI.XRLabel label11;
        private DevExpress.XtraReports.UI.XRLabel label10;
        private DevExpress.XtraReports.UI.XRLabel label49;
        private System.Data.OleDb.OleDbDataAdapter NOTIFYTOTALTableAdapter;
        private System.Data.OleDb.OleDbCommand oleDbCommand1;
        private System.Data.OleDb.OleDbConnection oleDbConnection1;
        private XtraReportSerialization.NotifyTotal NotifyTotal;
        private DevExpress.XtraReports.UI.XRControlStyle controlStyle1;
        private DevExpress.XtraReports.Parameters.Parameter paraPrintEn;
        private System.Resources.ResourceManager _resources;
        public rptC06_Totals() {
            this.InitializeComponent();
        }
        private System.Resources.ResourceManager resources {
            get {
                if (_resources == null) {
                    string resourceString = @"zsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTIuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAABAAAAAAAAAFBBRFBBRFBn1G8VAAAAAPMAAAAybwBsAGUARABiAEMAbwBtAG0AYQBuAGQAMQAuAEMAbwBtAG0AYQBuAGQAVABlAHgAdAAAAAAAAZAFU2VsZWN0ICJJTlZEQVRFIiwgIkNPTVBJRCIsICLnuL3nmbznpajnrYbmlbgiLCAi6Z2e6Zu75a2Q55m856Wo562G5pW4IiwgIumbu+WtkOeZvOelqOethuaVuCIsICLpnZ7pm7vlrZDnmbznpajnrYbmlbhf6Z2e5L2c5buiIiwgIumbu+WtkOeZvOelqOethuaVuF/pnZ7kvZzlu6IiLCAi6Z2e6Zu75a2Q55m856Wo562G5pW4X+S9nOW7oiIsICLpm7vlrZDnmbznpajnrYbmlbhf5L2c5buiIiwgIue4veS9nOW7ouethuaVuCIsICLpnZ7pm7vlrZDnmbznpajnrYbmlbhf5o2Q6LSIIiwgIumbu+WtkOeZvOelqOethuaVuF/mjZDotIgiLCAi6YCa55+l54uA5oWL5oiQ5Yqf562G5pW4IiwgIumAmuefpeeLgOaFi+WkseaVl+ethuaVuCIsICJFTUFJTOeZvOmAgeaIkOWKn+ethuaVuCIsICJFTUFJTOeZvOmAgeWbnuafpeethuaVuCIsICJFTUFJTOeZvOmAgeWkseaVl+ethuaVuCIsICLnsKHoqIrnmbzpgIHmiJDlip/nrYbmlbgiLCAi57Ch6KiK5Zue5p+l5oiQ5Yqf562G5pW4IiwgIuewoeioiueZvOmAgeWkseaVl+ethuaVuCIsICJUVk1BSUznmbzpgIHmiJDlip/nrYbmlbgiLCAiVFZNQUlM55m86YCB5aSx5pWX562G5pW4IiwgIkNN5bCO5rWB55m86YCB5oiQ5Yqf562G5pW4IiwgIkNN5bCO5rWB55m86YCB5aSx5pWX562G5pW4IiBmcm9tICJOT1RJRllUT1RBTCI=";
                    this._resources = new DevExpress.XtraReports.Serialization.XRResourceManager(resourceString);
                }
                return this._resources;
            }
        }
        private void InitializeComponent() {
            this.TopMargin = new DevExpress.XtraReports.UI.TopMarginBand();
            this.Detail = new DevExpress.XtraReports.UI.DetailBand();
            this.BottomMargin = new DevExpress.XtraReports.UI.BottomMarginBand();
            this.ReportHeader = new DevExpress.XtraReports.UI.ReportHeaderBand();
            this.PageHeader = new DevExpress.XtraReports.UI.PageHeaderBand();
            this.label48 = new DevExpress.XtraReports.UI.XRLabel();
            this.label23 = new DevExpress.XtraReports.UI.XRLabel();
            this.label38 = new DevExpress.XtraReports.UI.XRLabel();
            this.label37 = new DevExpress.XtraReports.UI.XRLabel();
            this.label36 = new DevExpress.XtraReports.UI.XRLabel();
            this.label27 = new DevExpress.XtraReports.UI.XRLabel();
            this.label4 = new DevExpress.XtraReports.UI.XRLabel();
            this.label5 = new DevExpress.XtraReports.UI.XRLabel();
            this.label46 = new DevExpress.XtraReports.UI.XRLabel();
            this.label26 = new DevExpress.XtraReports.UI.XRLabel();
            this.label6 = new DevExpress.XtraReports.UI.XRLabel();
            this.label39 = new DevExpress.XtraReports.UI.XRLabel();
            this.label28 = new DevExpress.XtraReports.UI.XRLabel();
            this.label41 = new DevExpress.XtraReports.UI.XRLabel();
            this.label40 = new DevExpress.XtraReports.UI.XRLabel();
            this.label45 = new DevExpress.XtraReports.UI.XRLabel();
            this.label20 = new DevExpress.XtraReports.UI.XRLabel();
            this.label42 = new DevExpress.XtraReports.UI.XRLabel();
            this.label19 = new DevExpress.XtraReports.UI.XRLabel();
            this.label18 = new DevExpress.XtraReports.UI.XRLabel();
            this.label24 = new DevExpress.XtraReports.UI.XRLabel();
            this.label22 = new DevExpress.XtraReports.UI.XRLabel();
            this.label21 = new DevExpress.XtraReports.UI.XRLabel();
            this.label25 = new DevExpress.XtraReports.UI.XRLabel();
            this.label47 = new DevExpress.XtraReports.UI.XRLabel();
            this.label43 = new DevExpress.XtraReports.UI.XRLabel();
            this.label35 = new DevExpress.XtraReports.UI.XRLabel();
            this.label31 = new DevExpress.XtraReports.UI.XRLabel();
            this.label30 = new DevExpress.XtraReports.UI.XRLabel();
            this.label29 = new DevExpress.XtraReports.UI.XRLabel();
            this.label13 = new DevExpress.XtraReports.UI.XRLabel();
            this.label1 = new DevExpress.XtraReports.UI.XRLabel();
            this.label2 = new DevExpress.XtraReports.UI.XRLabel();
            this.label44 = new DevExpress.XtraReports.UI.XRLabel();
            this.label12 = new DevExpress.XtraReports.UI.XRLabel();
            this.label3 = new DevExpress.XtraReports.UI.XRLabel();
            this.label32 = new DevExpress.XtraReports.UI.XRLabel();
            this.label14 = new DevExpress.XtraReports.UI.XRLabel();
            this.label34 = new DevExpress.XtraReports.UI.XRLabel();
            this.label33 = new DevExpress.XtraReports.UI.XRLabel();
            this.label9 = new DevExpress.XtraReports.UI.XRLabel();
            this.label8 = new DevExpress.XtraReports.UI.XRLabel();
            this.label7 = new DevExpress.XtraReports.UI.XRLabel();
            this.label17 = new DevExpress.XtraReports.UI.XRLabel();
            this.label16 = new DevExpress.XtraReports.UI.XRLabel();
            this.label15 = new DevExpress.XtraReports.UI.XRLabel();
            this.label11 = new DevExpress.XtraReports.UI.XRLabel();
            this.label10 = new DevExpress.XtraReports.UI.XRLabel();
            this.label49 = new DevExpress.XtraReports.UI.XRLabel();
            this.NOTIFYTOTALTableAdapter = new System.Data.OleDb.OleDbDataAdapter();
            this.oleDbCommand1 = new System.Data.OleDb.OleDbCommand();
            this.oleDbConnection1 = new System.Data.OleDb.OleDbConnection();
            this.NotifyTotal = new XtraReportSerialization.NotifyTotal();
            this.controlStyle1 = new DevExpress.XtraReports.UI.XRControlStyle();
            this.paraPrintEn = new DevExpress.XtraReports.Parameters.Parameter();
            ((System.ComponentModel.ISupportInitialize)(this.NotifyTotal)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this)).BeginInit();
            // 
            // TopMargin
            // 
            this.TopMargin.HeightF = 11F;
            this.TopMargin.Name = "TopMargin";
            // 
            // Detail
            // 
            this.Detail.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label48,
                        this.label23,
                        this.label38,
                        this.label37,
                        this.label36,
                        this.label27,
                        this.label4,
                        this.label5,
                        this.label46,
                        this.label26,
                        this.label6,
                        this.label39,
                        this.label28,
                        this.label41,
                        this.label40,
                        this.label45,
                        this.label20,
                        this.label42,
                        this.label19,
                        this.label18,
                        this.label24,
                        this.label22,
                        this.label21,
                        this.label25});
            this.Detail.Font = new System.Drawing.Font("新細明體", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.Detail.HeightF = 25F;
            this.Detail.KeepTogether = true;
            this.Detail.Name = "Detail";
            this.Detail.OddStyleName = "controlStyle1";
            this.Detail.StylePriority.UseFont = false;
            // 
            // BottomMargin
            // 
            this.BottomMargin.HeightF = 46F;
            this.BottomMargin.Name = "BottomMargin";
            // 
            // ReportHeader
            // 
            this.ReportHeader.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label47});
            this.ReportHeader.HeightF = 23F;
            this.ReportHeader.Name = "ReportHeader";
            // 
            // PageHeader
            // 
            this.PageHeader.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label43,
                        this.label35,
                        this.label31,
                        this.label30,
                        this.label29,
                        this.label13,
                        this.label1,
                        this.label2,
                        this.label44,
                        this.label12,
                        this.label3,
                        this.label32,
                        this.label14,
                        this.label34,
                        this.label33,
                        this.label9,
                        this.label8,
                        this.label7,
                        this.label17,
                        this.label16,
                        this.label15,
                        this.label11,
                        this.label10,
                        this.label49});
            this.PageHeader.HeightF = 25F;
            this.PageHeader.Name = "PageHeader";
            // 
            // label48
            // 
            this.label48.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "NOTIFYTOTAL.COMPID")});
            this.label48.Font = new System.Drawing.Font("新細明體", 9F);
            this.label48.LocationFloat = new DevExpress.Utils.PointFloat(2350F, 0F);
            this.label48.Name = "label48";
            this.label48.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label48.SizeF = new System.Drawing.SizeF(78.125F, 25F);
            this.label48.StylePriority.UseFont = false;
            this.label48.StylePriority.UseTextAlignment = false;
            this.label48.Text = "label48";
            this.label48.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label23
            // 
            this.label23.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "NOTIFYTOTAL.簡訊發送成功筆數")});
            this.label23.Font = new System.Drawing.Font("新細明體", 9F);
            this.label23.LocationFloat = new DevExpress.Utils.PointFloat(1687.5F, 0F);
            this.label23.Name = "label23";
            this.label23.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label23.SizeF = new System.Drawing.SizeF(87.5F, 25F);
            this.label23.StylePriority.UseFont = false;
            this.label23.StylePriority.UseTextAlignment = false;
            this.label23.Text = "label23";
            this.label23.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label38
            // 
            this.label38.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "NOTIFYTOTAL.通知狀態成功筆數")});
            this.label38.Font = new System.Drawing.Font("新細明體", 9F);
            this.label38.LocationFloat = new DevExpress.Utils.PointFloat(1200F, 0F);
            this.label38.Name = "label38";
            this.label38.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label38.SizeF = new System.Drawing.SizeF(112.5F, 25F);
            this.label38.StylePriority.UseFont = false;
            this.label38.StylePriority.UseTextAlignment = false;
            this.label38.Text = "label38";
            this.label38.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label37
            // 
            this.label37.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "NOTIFYTOTAL.通知狀態失敗筆數")});
            this.label37.Font = new System.Drawing.Font("新細明體", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(136)));
            this.label37.LocationFloat = new DevExpress.Utils.PointFloat(1312.5F, 0F);
            this.label37.Name = "label37";
            this.label37.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label37.SizeF = new System.Drawing.SizeF(112.5F, 25F);
            this.label37.StylePriority.UseFont = false;
            this.label37.StylePriority.UseTextAlignment = false;
            this.label37.Text = "label37";
            this.label37.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label36
            // 
            this.label36.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "NOTIFYTOTAL.非電子發票筆數_捐贈")});
            this.label36.Font = new System.Drawing.Font("新細明體", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(136)));
            this.label36.LocationFloat = new DevExpress.Utils.PointFloat(950F, 0F);
            this.label36.Name = "label36";
            this.label36.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label36.SizeF = new System.Drawing.SizeF(125F, 25F);
            this.label36.StylePriority.UseFont = false;
            this.label36.StylePriority.UseTextAlignment = false;
            this.label36.Text = "label36";
            this.label36.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label27
            // 
            this.label27.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "NOTIFYTOTAL.非電子發票筆數_作廢")});
            this.label27.Font = new System.Drawing.Font("新細明體", 9F);
            this.label27.LocationFloat = new DevExpress.Utils.PointFloat(612.5F, 0F);
            this.label27.Name = "label27";
            this.label27.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label27.SizeF = new System.Drawing.SizeF(125F, 25F);
            this.label27.StylePriority.UseFont = false;
            this.label27.StylePriority.UseTextAlignment = false;
            this.label27.Text = "label27";
            this.label27.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label4
            // 
            this.label4.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "NOTIFYTOTAL.INVDATE", "{0:yyyy/MM/dd}")});
            this.label4.Font = new System.Drawing.Font("新細明體", 9F);
            this.label4.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.label4.Name = "label4";
            this.label4.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label4.SizeF = new System.Drawing.SizeF(62.5F, 25F);
            this.label4.StylePriority.UseFont = false;
            this.label4.StylePriority.UseTextAlignment = false;
            this.label4.Text = "label4";
            this.label4.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label5
            // 
            this.label5.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "NOTIFYTOTAL.CM導流發送失敗筆數")});
            this.label5.Font = new System.Drawing.Font("新細明體", 9F);
            this.label5.LocationFloat = new DevExpress.Utils.PointFloat(2250F, 0F);
            this.label5.Name = "label5";
            this.label5.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label5.SizeF = new System.Drawing.SizeF(100F, 25F);
            this.label5.StylePriority.UseFont = false;
            this.label5.StylePriority.UseTextAlignment = false;
            this.label5.Text = "label5";
            this.label5.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label46
            // 
            this.label46.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "NOTIFYTOTAL.總發票筆數")});
            this.label46.Font = new System.Drawing.Font("新細明體", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(136)));
            this.label46.LocationFloat = new DevExpress.Utils.PointFloat(62.5F, 0F);
            this.label46.Name = "label46";
            this.label46.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label46.SizeF = new System.Drawing.SizeF(87.5F, 25F);
            this.label46.StylePriority.UseFont = false;
            this.label46.StylePriority.UseTextAlignment = false;
            this.label46.Text = "label46";
            this.label46.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label26
            // 
            this.label26.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "NOTIFYTOTAL.非電子發票筆數")});
            this.label26.Font = new System.Drawing.Font("新細明體", 9F);
            this.label26.LocationFloat = new DevExpress.Utils.PointFloat(150F, 0F);
            this.label26.Name = "label26";
            this.label26.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label26.SizeF = new System.Drawing.SizeF(100F, 25F);
            this.label26.StylePriority.UseFont = false;
            this.label26.StylePriority.UseTextAlignment = false;
            this.label26.Text = "label26";
            this.label26.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label6
            // 
            this.label6.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "NOTIFYTOTAL.CM導流發送成功筆數")});
            this.label6.Font = new System.Drawing.Font("新細明體", 9F);
            this.label6.LocationFloat = new DevExpress.Utils.PointFloat(2150F, 0F);
            this.label6.Name = "label6";
            this.label6.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label6.SizeF = new System.Drawing.SizeF(100F, 25F);
            this.label6.StylePriority.UseFont = false;
            this.label6.StylePriority.UseTextAlignment = false;
            this.label6.Text = "label6";
            this.label6.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label39
            // 
            this.label39.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "NOTIFYTOTAL.電子發票筆數")});
            this.label39.Font = new System.Drawing.Font("新細明體", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(136)));
            this.label39.LocationFloat = new DevExpress.Utils.PointFloat(250F, 0F);
            this.label39.Name = "label39";
            this.label39.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label39.SizeF = new System.Drawing.SizeF(87.5F, 25F);
            this.label39.StylePriority.UseFont = false;
            this.label39.StylePriority.UseTextAlignment = false;
            this.label39.Text = "label39";
            this.label39.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label28
            // 
            this.label28.BackColor = System.Drawing.Color.Transparent;
            this.label28.BorderColor = System.Drawing.SystemColors.ControlText;
            this.label28.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.label28.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "NOTIFYTOTAL.非電子發票筆數_非作廢")});
            this.label28.Font = new System.Drawing.Font("新細明體", 9F);
            this.label28.LocationFloat = new DevExpress.Utils.PointFloat(337.5F, 0F);
            this.label28.Name = "label28";
            this.label28.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label28.SizeF = new System.Drawing.SizeF(137.5F, 25F);
            this.label28.StylePriority.UseBackColor = false;
            this.label28.StylePriority.UseBorderColor = false;
            this.label28.StylePriority.UseBorders = false;
            this.label28.StylePriority.UseFont = false;
            this.label28.StylePriority.UseTextAlignment = false;
            this.label28.Text = "[非電子發票筆數_非作廢]";
            this.label28.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label41
            // 
            this.label41.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "NOTIFYTOTAL.電子發票筆數_非作廢")});
            this.label41.Font = new System.Drawing.Font("新細明體", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(136)));
            this.label41.LocationFloat = new DevExpress.Utils.PointFloat(475F, 0F);
            this.label41.Name = "label41";
            this.label41.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label41.SizeF = new System.Drawing.SizeF(137.5F, 25F);
            this.label41.StylePriority.UseFont = false;
            this.label41.StylePriority.UseTextAlignment = false;
            this.label41.Text = "label41";
            this.label41.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label40
            // 
            this.label40.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "NOTIFYTOTAL.電子發票筆數_作廢")});
            this.label40.Font = new System.Drawing.Font("新細明體", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(136)));
            this.label40.LocationFloat = new DevExpress.Utils.PointFloat(737.5F, 0F);
            this.label40.Name = "label40";
            this.label40.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label40.SizeF = new System.Drawing.SizeF(125F, 25F);
            this.label40.StylePriority.UseFont = false;
            this.label40.StylePriority.UseTextAlignment = false;
            this.label40.Text = "label40";
            this.label40.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label45
            // 
            this.label45.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "NOTIFYTOTAL.總作廢筆數")});
            this.label45.Font = new System.Drawing.Font("新細明體", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(136)));
            this.label45.LocationFloat = new DevExpress.Utils.PointFloat(862.5F, 0F);
            this.label45.Name = "label45";
            this.label45.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label45.SizeF = new System.Drawing.SizeF(87.5F, 25F);
            this.label45.StylePriority.UseFont = false;
            this.label45.StylePriority.UseTextAlignment = false;
            this.label45.Text = "label45";
            this.label45.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label20
            // 
            this.label20.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "NOTIFYTOTAL.EMAIL發送成功筆數")});
            this.label20.Font = new System.Drawing.Font("新細明體", 9F);
            this.label20.LocationFloat = new DevExpress.Utils.PointFloat(1425F, 0F);
            this.label20.Name = "label20";
            this.label20.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label20.SizeF = new System.Drawing.SizeF(87.5F, 25F);
            this.label20.StylePriority.UseFont = false;
            this.label20.StylePriority.UseTextAlignment = false;
            this.label20.Text = "label20";
            this.label20.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label42
            // 
            this.label42.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "NOTIFYTOTAL.電子發票筆數_捐贈")});
            this.label42.Font = new System.Drawing.Font("新細明體", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(136)));
            this.label42.LocationFloat = new DevExpress.Utils.PointFloat(1075F, 0F);
            this.label42.Name = "label42";
            this.label42.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label42.SizeF = new System.Drawing.SizeF(125F, 25F);
            this.label42.StylePriority.UseFont = false;
            this.label42.StylePriority.UseTextAlignment = false;
            this.label42.Text = "label42";
            this.label42.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label19
            // 
            this.label19.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "NOTIFYTOTAL.EMAIL發送回查筆數")});
            this.label19.Font = new System.Drawing.Font("新細明體", 9F);
            this.label19.LocationFloat = new DevExpress.Utils.PointFloat(1512.5F, 0F);
            this.label19.Name = "label19";
            this.label19.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label19.SizeF = new System.Drawing.SizeF(87.5F, 25F);
            this.label19.StylePriority.UseFont = false;
            this.label19.StylePriority.UseTextAlignment = false;
            this.label19.Text = "label19";
            this.label19.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label18
            // 
            this.label18.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "NOTIFYTOTAL.EMAIL發送失敗筆數")});
            this.label18.Font = new System.Drawing.Font("新細明體", 9F);
            this.label18.LocationFloat = new DevExpress.Utils.PointFloat(1600F, 0F);
            this.label18.Name = "label18";
            this.label18.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label18.SizeF = new System.Drawing.SizeF(87.5F, 25F);
            this.label18.StylePriority.UseFont = false;
            this.label18.StylePriority.UseTextAlignment = false;
            this.label18.Text = "label18";
            this.label18.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label24
            // 
            this.label24.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "NOTIFYTOTAL.簡訊回查成功筆數")});
            this.label24.Font = new System.Drawing.Font("新細明體", 9F);
            this.label24.LocationFloat = new DevExpress.Utils.PointFloat(1775F, 0F);
            this.label24.Name = "label24";
            this.label24.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label24.SizeF = new System.Drawing.SizeF(87.5F, 25F);
            this.label24.StylePriority.UseFont = false;
            this.label24.StylePriority.UseTextAlignment = false;
            this.label24.Text = "label24";
            this.label24.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label22
            // 
            this.label22.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "NOTIFYTOTAL.簡訊發送失敗筆數")});
            this.label22.Font = new System.Drawing.Font("新細明體", 9F);
            this.label22.LocationFloat = new DevExpress.Utils.PointFloat(1862.5F, 0F);
            this.label22.Name = "label22";
            this.label22.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label22.SizeF = new System.Drawing.SizeF(87.5F, 25F);
            this.label22.StylePriority.UseFont = false;
            this.label22.StylePriority.UseTextAlignment = false;
            this.label22.Text = "label22";
            this.label22.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label21
            // 
            this.label21.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "NOTIFYTOTAL.TVMAIL發送失敗筆數")});
            this.label21.Font = new System.Drawing.Font("新細明體", 9F);
            this.label21.LocationFloat = new DevExpress.Utils.PointFloat(2050F, 0F);
            this.label21.Name = "label21";
            this.label21.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label21.SizeF = new System.Drawing.SizeF(100F, 25F);
            this.label21.StylePriority.UseFont = false;
            this.label21.StylePriority.UseTextAlignment = false;
            this.label21.Text = "label21";
            this.label21.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label25
            // 
            this.label25.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "NOTIFYTOTAL.TVMAIL發送成功筆數")});
            this.label25.Font = new System.Drawing.Font("新細明體", 9F);
            this.label25.LocationFloat = new DevExpress.Utils.PointFloat(1950F, 0F);
            this.label25.Name = "label25";
            this.label25.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label25.SizeF = new System.Drawing.SizeF(100F, 25F);
            this.label25.StylePriority.UseFont = false;
            this.label25.StylePriority.UseTextAlignment = false;
            this.label25.Text = "label25";
            this.label25.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label47
            // 
            this.label47.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.label47.Font = new System.Drawing.Font("新細明體", 20.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(136)));
            this.label47.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.label47.Name = "label47";
            this.label47.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label47.SizeF = new System.Drawing.SizeF(2350F, 23F);
            this.label47.StylePriority.UseBackColor = false;
            this.label47.StylePriority.UseFont = false;
            this.label47.StylePriority.UseTextAlignment = false;
            this.label47.Text = "電子發票通知統計表";
            this.label47.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label43
            // 
            this.label43.BackColor = System.Drawing.Color.SteelBlue;
            this.label43.BorderColor = System.Drawing.Color.SteelBlue;
            this.label43.Borders = ((DevExpress.XtraPrinting.BorderSide)((((DevExpress.XtraPrinting.BorderSide.Left | DevExpress.XtraPrinting.BorderSide.Top) 
                        | DevExpress.XtraPrinting.BorderSide.Right) 
                        | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.label43.Font = new System.Drawing.Font("新細明體", 9F);
            this.label43.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.label43.LocationFloat = new DevExpress.Utils.PointFloat(862.5F, 0F);
            this.label43.Name = "label43";
            this.label43.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label43.SizeF = new System.Drawing.SizeF(87.5F, 25F);
            this.label43.StylePriority.UseBackColor = false;
            this.label43.StylePriority.UseBorderColor = false;
            this.label43.StylePriority.UseBorders = false;
            this.label43.StylePriority.UseFont = false;
            this.label43.StylePriority.UseForeColor = false;
            this.label43.StylePriority.UseTextAlignment = false;
            this.label43.Text = "總作廢筆數";
            this.label43.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label35
            // 
            this.label35.BackColor = System.Drawing.Color.SteelBlue;
            this.label35.BorderColor = System.Drawing.Color.SteelBlue;
            this.label35.Borders = ((DevExpress.XtraPrinting.BorderSide)((((DevExpress.XtraPrinting.BorderSide.Left | DevExpress.XtraPrinting.BorderSide.Top) 
                        | DevExpress.XtraPrinting.BorderSide.Right) 
                        | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.label35.Font = new System.Drawing.Font("新細明體", 9F);
            this.label35.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.label35.LocationFloat = new DevExpress.Utils.PointFloat(1075F, 0F);
            this.label35.Name = "label35";
            this.label35.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label35.SizeF = new System.Drawing.SizeF(125F, 25F);
            this.label35.StylePriority.UseBackColor = false;
            this.label35.StylePriority.UseBorderColor = false;
            this.label35.StylePriority.UseBorders = false;
            this.label35.StylePriority.UseFont = false;
            this.label35.StylePriority.UseForeColor = false;
            this.label35.StylePriority.UseTextAlignment = false;
            this.label35.Text = "電子發票筆數(捐贈)";
            this.label35.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label31
            // 
            this.label31.BackColor = System.Drawing.Color.SteelBlue;
            this.label31.BorderColor = System.Drawing.Color.SteelBlue;
            this.label31.Borders = ((DevExpress.XtraPrinting.BorderSide)((((DevExpress.XtraPrinting.BorderSide.Left | DevExpress.XtraPrinting.BorderSide.Top) 
                        | DevExpress.XtraPrinting.BorderSide.Right) 
                        | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.label31.Font = new System.Drawing.Font("新細明體", 9F);
            this.label31.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.label31.LocationFloat = new DevExpress.Utils.PointFloat(1200F, 0F);
            this.label31.Name = "label31";
            this.label31.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label31.SizeF = new System.Drawing.SizeF(112.5F, 25F);
            this.label31.StylePriority.UseBackColor = false;
            this.label31.StylePriority.UseBorderColor = false;
            this.label31.StylePriority.UseBorders = false;
            this.label31.StylePriority.UseFont = false;
            this.label31.StylePriority.UseForeColor = false;
            this.label31.StylePriority.UseTextAlignment = false;
            this.label31.Text = "通知狀態成功筆數";
            this.label31.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label30
            // 
            this.label30.BackColor = System.Drawing.Color.SteelBlue;
            this.label30.BorderColor = System.Drawing.Color.SteelBlue;
            this.label30.Borders = ((DevExpress.XtraPrinting.BorderSide)((((DevExpress.XtraPrinting.BorderSide.Left | DevExpress.XtraPrinting.BorderSide.Top) 
                        | DevExpress.XtraPrinting.BorderSide.Right) 
                        | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.label30.Font = new System.Drawing.Font("新細明體", 9F);
            this.label30.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.label30.LocationFloat = new DevExpress.Utils.PointFloat(1312.5F, 0F);
            this.label30.Name = "label30";
            this.label30.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label30.SizeF = new System.Drawing.SizeF(112.5F, 25F);
            this.label30.StylePriority.UseBackColor = false;
            this.label30.StylePriority.UseBorderColor = false;
            this.label30.StylePriority.UseBorders = false;
            this.label30.StylePriority.UseFont = false;
            this.label30.StylePriority.UseForeColor = false;
            this.label30.StylePriority.UseTextAlignment = false;
            this.label30.Text = "通知狀態失敗筆數";
            this.label30.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label29
            // 
            this.label29.BackColor = System.Drawing.Color.SteelBlue;
            this.label29.BorderColor = System.Drawing.Color.SteelBlue;
            this.label29.Borders = ((DevExpress.XtraPrinting.BorderSide)((((DevExpress.XtraPrinting.BorderSide.Left | DevExpress.XtraPrinting.BorderSide.Top) 
                        | DevExpress.XtraPrinting.BorderSide.Right) 
                        | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.label29.Font = new System.Drawing.Font("新細明體", 9F);
            this.label29.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.label29.LocationFloat = new DevExpress.Utils.PointFloat(950F, 0F);
            this.label29.Name = "label29";
            this.label29.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label29.SizeF = new System.Drawing.SizeF(125F, 25F);
            this.label29.StylePriority.UseBackColor = false;
            this.label29.StylePriority.UseBorderColor = false;
            this.label29.StylePriority.UseBorders = false;
            this.label29.StylePriority.UseFont = false;
            this.label29.StylePriority.UseForeColor = false;
            this.label29.StylePriority.UseTextAlignment = false;
            this.label29.Text = "非電子發票筆(捐贈)";
            this.label29.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label13
            // 
            this.label13.BackColor = System.Drawing.Color.SteelBlue;
            this.label13.BorderColor = System.Drawing.Color.SteelBlue;
            this.label13.Borders = ((DevExpress.XtraPrinting.BorderSide)((((DevExpress.XtraPrinting.BorderSide.Left | DevExpress.XtraPrinting.BorderSide.Top) 
                        | DevExpress.XtraPrinting.BorderSide.Right) 
                        | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.label13.Font = new System.Drawing.Font("新細明體", 9F);
            this.label13.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.label13.LocationFloat = new DevExpress.Utils.PointFloat(612.5F, 0F);
            this.label13.Name = "label13";
            this.label13.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label13.SizeF = new System.Drawing.SizeF(125F, 25F);
            this.label13.StylePriority.UseBackColor = false;
            this.label13.StylePriority.UseBorderColor = false;
            this.label13.StylePriority.UseBorders = false;
            this.label13.StylePriority.UseFont = false;
            this.label13.StylePriority.UseForeColor = false;
            this.label13.StylePriority.UseTextAlignment = false;
            this.label13.Text = "非電子發票筆(作廢)";
            this.label13.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label1
            // 
            this.label1.BackColor = System.Drawing.Color.SteelBlue;
            this.label1.BorderColor = System.Drawing.Color.SteelBlue;
            this.label1.Borders = ((DevExpress.XtraPrinting.BorderSide)((((DevExpress.XtraPrinting.BorderSide.Left | DevExpress.XtraPrinting.BorderSide.Top) 
                        | DevExpress.XtraPrinting.BorderSide.Right) 
                        | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.label1.Font = new System.Drawing.Font("新細明體", 9F);
            this.label1.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.label1.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.label1.Name = "label1";
            this.label1.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label1.SizeF = new System.Drawing.SizeF(62.5F, 25F);
            this.label1.StylePriority.UseBackColor = false;
            this.label1.StylePriority.UseBorderColor = false;
            this.label1.StylePriority.UseBorders = false;
            this.label1.StylePriority.UseFont = false;
            this.label1.StylePriority.UseForeColor = false;
            this.label1.StylePriority.UseTextAlignment = false;
            this.label1.Text = "發票日期";
            this.label1.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label2
            // 
            this.label2.BackColor = System.Drawing.Color.SteelBlue;
            this.label2.BorderColor = System.Drawing.Color.SteelBlue;
            this.label2.Borders = ((DevExpress.XtraPrinting.BorderSide)((((DevExpress.XtraPrinting.BorderSide.Left | DevExpress.XtraPrinting.BorderSide.Top) 
                        | DevExpress.XtraPrinting.BorderSide.Right) 
                        | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.label2.Font = new System.Drawing.Font("新細明體", 9F);
            this.label2.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.label2.LocationFloat = new DevExpress.Utils.PointFloat(2250F, 0F);
            this.label2.Name = "label2";
            this.label2.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label2.SizeF = new System.Drawing.SizeF(100F, 25F);
            this.label2.StylePriority.UseBackColor = false;
            this.label2.StylePriority.UseBorderColor = false;
            this.label2.StylePriority.UseBorders = false;
            this.label2.StylePriority.UseFont = false;
            this.label2.StylePriority.UseForeColor = false;
            this.label2.StylePriority.UseTextAlignment = false;
            this.label2.Text = "CM導流失敗筆數";
            this.label2.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label44
            // 
            this.label44.BackColor = System.Drawing.Color.SteelBlue;
            this.label44.BorderColor = System.Drawing.Color.SteelBlue;
            this.label44.Borders = ((DevExpress.XtraPrinting.BorderSide)((((DevExpress.XtraPrinting.BorderSide.Left | DevExpress.XtraPrinting.BorderSide.Top) 
                        | DevExpress.XtraPrinting.BorderSide.Right) 
                        | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.label44.Font = new System.Drawing.Font("新細明體", 9F);
            this.label44.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.label44.LocationFloat = new DevExpress.Utils.PointFloat(62.5F, 0F);
            this.label44.Name = "label44";
            this.label44.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label44.SizeF = new System.Drawing.SizeF(87.5F, 25F);
            this.label44.StylePriority.UseBackColor = false;
            this.label44.StylePriority.UseBorderColor = false;
            this.label44.StylePriority.UseBorders = false;
            this.label44.StylePriority.UseFont = false;
            this.label44.StylePriority.UseForeColor = false;
            this.label44.StylePriority.UseTextAlignment = false;
            this.label44.Text = "總發票筆數";
            this.label44.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label12
            // 
            this.label12.BackColor = System.Drawing.Color.SteelBlue;
            this.label12.BorderColor = System.Drawing.Color.SteelBlue;
            this.label12.Borders = ((DevExpress.XtraPrinting.BorderSide)((((DevExpress.XtraPrinting.BorderSide.Left | DevExpress.XtraPrinting.BorderSide.Top) 
                        | DevExpress.XtraPrinting.BorderSide.Right) 
                        | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.label12.Font = new System.Drawing.Font("新細明體", 9F);
            this.label12.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.label12.LocationFloat = new DevExpress.Utils.PointFloat(150F, 0F);
            this.label12.Name = "label12";
            this.label12.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label12.SizeF = new System.Drawing.SizeF(100F, 25F);
            this.label12.StylePriority.UseBackColor = false;
            this.label12.StylePriority.UseBorderColor = false;
            this.label12.StylePriority.UseBorders = false;
            this.label12.StylePriority.UseFont = false;
            this.label12.StylePriority.UseForeColor = false;
            this.label12.StylePriority.UseTextAlignment = false;
            this.label12.Text = "非電子發票筆數";
            this.label12.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label3
            // 
            this.label3.BackColor = System.Drawing.Color.SteelBlue;
            this.label3.BorderColor = System.Drawing.Color.SteelBlue;
            this.label3.Borders = ((DevExpress.XtraPrinting.BorderSide)((((DevExpress.XtraPrinting.BorderSide.Left | DevExpress.XtraPrinting.BorderSide.Top) 
                        | DevExpress.XtraPrinting.BorderSide.Right) 
                        | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.label3.Font = new System.Drawing.Font("新細明體", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(136)));
            this.label3.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.label3.LocationFloat = new DevExpress.Utils.PointFloat(2150F, 0F);
            this.label3.Name = "label3";
            this.label3.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label3.SizeF = new System.Drawing.SizeF(100F, 25F);
            this.label3.StylePriority.UseBackColor = false;
            this.label3.StylePriority.UseBorderColor = false;
            this.label3.StylePriority.UseBorders = false;
            this.label3.StylePriority.UseFont = false;
            this.label3.StylePriority.UseForeColor = false;
            this.label3.StylePriority.UseTextAlignment = false;
            this.label3.Text = "CM導流成功筆數";
            this.label3.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label32
            // 
            this.label32.BackColor = System.Drawing.Color.SteelBlue;
            this.label32.BorderColor = System.Drawing.Color.SteelBlue;
            this.label32.Borders = ((DevExpress.XtraPrinting.BorderSide)((((DevExpress.XtraPrinting.BorderSide.Left | DevExpress.XtraPrinting.BorderSide.Top) 
                        | DevExpress.XtraPrinting.BorderSide.Right) 
                        | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.label32.Font = new System.Drawing.Font("新細明體", 9F);
            this.label32.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.label32.LocationFloat = new DevExpress.Utils.PointFloat(250F, 0F);
            this.label32.Name = "label32";
            this.label32.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label32.SizeF = new System.Drawing.SizeF(87.5F, 25F);
            this.label32.StylePriority.UseBackColor = false;
            this.label32.StylePriority.UseBorderColor = false;
            this.label32.StylePriority.UseBorders = false;
            this.label32.StylePriority.UseFont = false;
            this.label32.StylePriority.UseForeColor = false;
            this.label32.StylePriority.UseTextAlignment = false;
            this.label32.Text = "電子發票筆數";
            this.label32.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label14
            // 
            this.label14.BackColor = System.Drawing.Color.SteelBlue;
            this.label14.BorderColor = System.Drawing.Color.SteelBlue;
            this.label14.Borders = ((DevExpress.XtraPrinting.BorderSide)((((DevExpress.XtraPrinting.BorderSide.Left | DevExpress.XtraPrinting.BorderSide.Top) 
                        | DevExpress.XtraPrinting.BorderSide.Right) 
                        | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.label14.Font = new System.Drawing.Font("新細明體", 9F);
            this.label14.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.label14.LocationFloat = new DevExpress.Utils.PointFloat(337.5F, 0F);
            this.label14.Name = "label14";
            this.label14.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label14.SizeF = new System.Drawing.SizeF(137.5F, 25F);
            this.label14.StylePriority.UseBackColor = false;
            this.label14.StylePriority.UseBorderColor = false;
            this.label14.StylePriority.UseBorders = false;
            this.label14.StylePriority.UseFont = false;
            this.label14.StylePriority.UseForeColor = false;
            this.label14.StylePriority.UseTextAlignment = false;
            this.label14.Text = "非電子發票筆(非作廢)";
            this.label14.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label34
            // 
            this.label34.BackColor = System.Drawing.Color.SteelBlue;
            this.label34.BorderColor = System.Drawing.Color.SteelBlue;
            this.label34.Borders = ((DevExpress.XtraPrinting.BorderSide)((((DevExpress.XtraPrinting.BorderSide.Left | DevExpress.XtraPrinting.BorderSide.Top) 
                        | DevExpress.XtraPrinting.BorderSide.Right) 
                        | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.label34.Font = new System.Drawing.Font("新細明體", 9F);
            this.label34.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.label34.LocationFloat = new DevExpress.Utils.PointFloat(475F, 0F);
            this.label34.Name = "label34";
            this.label34.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label34.SizeF = new System.Drawing.SizeF(137.5F, 25F);
            this.label34.StylePriority.UseBackColor = false;
            this.label34.StylePriority.UseBorderColor = false;
            this.label34.StylePriority.UseBorders = false;
            this.label34.StylePriority.UseFont = false;
            this.label34.StylePriority.UseForeColor = false;
            this.label34.StylePriority.UseTextAlignment = false;
            this.label34.Text = "電子發票筆數(非作廢)";
            this.label34.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label33
            // 
            this.label33.BackColor = System.Drawing.Color.SteelBlue;
            this.label33.BorderColor = System.Drawing.Color.SteelBlue;
            this.label33.Borders = ((DevExpress.XtraPrinting.BorderSide)((((DevExpress.XtraPrinting.BorderSide.Left | DevExpress.XtraPrinting.BorderSide.Top) 
                        | DevExpress.XtraPrinting.BorderSide.Right) 
                        | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.label33.Font = new System.Drawing.Font("新細明體", 9F);
            this.label33.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.label33.LocationFloat = new DevExpress.Utils.PointFloat(737.5F, 0F);
            this.label33.Name = "label33";
            this.label33.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label33.SizeF = new System.Drawing.SizeF(125F, 25F);
            this.label33.StylePriority.UseBackColor = false;
            this.label33.StylePriority.UseBorderColor = false;
            this.label33.StylePriority.UseBorders = false;
            this.label33.StylePriority.UseFont = false;
            this.label33.StylePriority.UseForeColor = false;
            this.label33.StylePriority.UseTextAlignment = false;
            this.label33.Text = "電子發票筆數(作廢)";
            this.label33.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label9
            // 
            this.label9.BackColor = System.Drawing.Color.SteelBlue;
            this.label9.BorderColor = System.Drawing.Color.SteelBlue;
            this.label9.Borders = ((DevExpress.XtraPrinting.BorderSide)((((DevExpress.XtraPrinting.BorderSide.Left | DevExpress.XtraPrinting.BorderSide.Top) 
                        | DevExpress.XtraPrinting.BorderSide.Right) 
                        | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.label9.Font = new System.Drawing.Font("新細明體", 9F);
            this.label9.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.label9.LocationFloat = new DevExpress.Utils.PointFloat(1425F, 0F);
            this.label9.Name = "label9";
            this.label9.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label9.SizeF = new System.Drawing.SizeF(87.5F, 25F);
            this.label9.StylePriority.UseBackColor = false;
            this.label9.StylePriority.UseBorderColor = false;
            this.label9.StylePriority.UseBorders = false;
            this.label9.StylePriority.UseFont = false;
            this.label9.StylePriority.UseForeColor = false;
            this.label9.StylePriority.UseTextAlignment = false;
            this.label9.Text = "Email成功筆數";
            this.label9.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label8
            // 
            this.label8.BackColor = System.Drawing.Color.SteelBlue;
            this.label8.BorderColor = System.Drawing.Color.SteelBlue;
            this.label8.Borders = ((DevExpress.XtraPrinting.BorderSide)((((DevExpress.XtraPrinting.BorderSide.Left | DevExpress.XtraPrinting.BorderSide.Top) 
                        | DevExpress.XtraPrinting.BorderSide.Right) 
                        | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.label8.Font = new System.Drawing.Font("新細明體", 9F);
            this.label8.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.label8.LocationFloat = new DevExpress.Utils.PointFloat(1512.5F, 0F);
            this.label8.Name = "label8";
            this.label8.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label8.SizeF = new System.Drawing.SizeF(87.5F, 25F);
            this.label8.StylePriority.UseBackColor = false;
            this.label8.StylePriority.UseBorderColor = false;
            this.label8.StylePriority.UseBorders = false;
            this.label8.StylePriority.UseFont = false;
            this.label8.StylePriority.UseForeColor = false;
            this.label8.StylePriority.UseTextAlignment = false;
            this.label8.Text = "Email回查筆數";
            this.label8.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label7
            // 
            this.label7.BackColor = System.Drawing.Color.SteelBlue;
            this.label7.BorderColor = System.Drawing.Color.SteelBlue;
            this.label7.Borders = ((DevExpress.XtraPrinting.BorderSide)((((DevExpress.XtraPrinting.BorderSide.Left | DevExpress.XtraPrinting.BorderSide.Top) 
                        | DevExpress.XtraPrinting.BorderSide.Right) 
                        | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.label7.Font = new System.Drawing.Font("新細明體", 9F);
            this.label7.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.label7.LocationFloat = new DevExpress.Utils.PointFloat(1600F, 0F);
            this.label7.Name = "label7";
            this.label7.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label7.SizeF = new System.Drawing.SizeF(87.5F, 25F);
            this.label7.StylePriority.UseBackColor = false;
            this.label7.StylePriority.UseBorderColor = false;
            this.label7.StylePriority.UseBorders = false;
            this.label7.StylePriority.UseFont = false;
            this.label7.StylePriority.UseForeColor = false;
            this.label7.StylePriority.UseTextAlignment = false;
            this.label7.Text = "Email失敗筆數";
            this.label7.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label17
            // 
            this.label17.BackColor = System.Drawing.Color.SteelBlue;
            this.label17.BorderColor = System.Drawing.Color.SteelBlue;
            this.label17.Borders = ((DevExpress.XtraPrinting.BorderSide)((((DevExpress.XtraPrinting.BorderSide.Left | DevExpress.XtraPrinting.BorderSide.Top) 
                        | DevExpress.XtraPrinting.BorderSide.Right) 
                        | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.label17.Font = new System.Drawing.Font("新細明體", 9F);
            this.label17.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.label17.LocationFloat = new DevExpress.Utils.PointFloat(1687.5F, 0F);
            this.label17.Name = "label17";
            this.label17.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label17.SizeF = new System.Drawing.SizeF(87.5F, 25F);
            this.label17.StylePriority.UseBackColor = false;
            this.label17.StylePriority.UseBorderColor = false;
            this.label17.StylePriority.UseBorders = false;
            this.label17.StylePriority.UseFont = false;
            this.label17.StylePriority.UseForeColor = false;
            this.label17.StylePriority.UseTextAlignment = false;
            this.label17.Text = "簡訊成功筆數";
            this.label17.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label16
            // 
            this.label16.BackColor = System.Drawing.Color.SteelBlue;
            this.label16.BorderColor = System.Drawing.Color.SteelBlue;
            this.label16.Borders = ((DevExpress.XtraPrinting.BorderSide)((((DevExpress.XtraPrinting.BorderSide.Left | DevExpress.XtraPrinting.BorderSide.Top) 
                        | DevExpress.XtraPrinting.BorderSide.Right) 
                        | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.label16.Font = new System.Drawing.Font("新細明體", 9F);
            this.label16.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.label16.LocationFloat = new DevExpress.Utils.PointFloat(1775F, 0F);
            this.label16.Name = "label16";
            this.label16.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label16.SizeF = new System.Drawing.SizeF(87.5F, 25F);
            this.label16.StylePriority.UseBackColor = false;
            this.label16.StylePriority.UseBorderColor = false;
            this.label16.StylePriority.UseBorders = false;
            this.label16.StylePriority.UseFont = false;
            this.label16.StylePriority.UseForeColor = false;
            this.label16.StylePriority.UseTextAlignment = false;
            this.label16.Text = "簡訊回查筆數";
            this.label16.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label15
            // 
            this.label15.BackColor = System.Drawing.Color.SteelBlue;
            this.label15.BorderColor = System.Drawing.Color.SteelBlue;
            this.label15.Borders = ((DevExpress.XtraPrinting.BorderSide)((((DevExpress.XtraPrinting.BorderSide.Left | DevExpress.XtraPrinting.BorderSide.Top) 
                        | DevExpress.XtraPrinting.BorderSide.Right) 
                        | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.label15.Font = new System.Drawing.Font("新細明體", 9F);
            this.label15.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.label15.LocationFloat = new DevExpress.Utils.PointFloat(1862.5F, 0F);
            this.label15.Name = "label15";
            this.label15.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label15.SizeF = new System.Drawing.SizeF(87.5F, 25F);
            this.label15.StylePriority.UseBackColor = false;
            this.label15.StylePriority.UseBorderColor = false;
            this.label15.StylePriority.UseBorders = false;
            this.label15.StylePriority.UseFont = false;
            this.label15.StylePriority.UseForeColor = false;
            this.label15.StylePriority.UseTextAlignment = false;
            this.label15.Text = "簡訊失敗筆數";
            this.label15.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label11
            // 
            this.label11.BackColor = System.Drawing.Color.SteelBlue;
            this.label11.BorderColor = System.Drawing.Color.SteelBlue;
            this.label11.Borders = ((DevExpress.XtraPrinting.BorderSide)((((DevExpress.XtraPrinting.BorderSide.Left | DevExpress.XtraPrinting.BorderSide.Top) 
                        | DevExpress.XtraPrinting.BorderSide.Right) 
                        | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.label11.Font = new System.Drawing.Font("新細明體", 9F);
            this.label11.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.label11.LocationFloat = new DevExpress.Utils.PointFloat(1950F, 0F);
            this.label11.Name = "label11";
            this.label11.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label11.SizeF = new System.Drawing.SizeF(100F, 25F);
            this.label11.StylePriority.UseBackColor = false;
            this.label11.StylePriority.UseBorderColor = false;
            this.label11.StylePriority.UseBorders = false;
            this.label11.StylePriority.UseFont = false;
            this.label11.StylePriority.UseForeColor = false;
            this.label11.StylePriority.UseTextAlignment = false;
            this.label11.Text = "TVMail成功筆數";
            this.label11.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label10
            // 
            this.label10.BackColor = System.Drawing.Color.SteelBlue;
            this.label10.BorderColor = System.Drawing.Color.SteelBlue;
            this.label10.Borders = ((DevExpress.XtraPrinting.BorderSide)((((DevExpress.XtraPrinting.BorderSide.Left | DevExpress.XtraPrinting.BorderSide.Top) 
                        | DevExpress.XtraPrinting.BorderSide.Right) 
                        | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.label10.Font = new System.Drawing.Font("新細明體", 9F);
            this.label10.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.label10.LocationFloat = new DevExpress.Utils.PointFloat(2050F, 0F);
            this.label10.Name = "label10";
            this.label10.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label10.SizeF = new System.Drawing.SizeF(100F, 25F);
            this.label10.StylePriority.UseBackColor = false;
            this.label10.StylePriority.UseBorderColor = false;
            this.label10.StylePriority.UseBorders = false;
            this.label10.StylePriority.UseFont = false;
            this.label10.StylePriority.UseForeColor = false;
            this.label10.StylePriority.UseTextAlignment = false;
            this.label10.Text = "TVMail失敗筆數";
            this.label10.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // label49
            // 
            this.label49.BackColor = System.Drawing.Color.SteelBlue;
            this.label49.BorderColor = System.Drawing.Color.SteelBlue;
            this.label49.Borders = ((DevExpress.XtraPrinting.BorderSide)((((DevExpress.XtraPrinting.BorderSide.Left | DevExpress.XtraPrinting.BorderSide.Top) 
                        | DevExpress.XtraPrinting.BorderSide.Right) 
                        | DevExpress.XtraPrinting.BorderSide.Bottom)));
            this.label49.Font = new System.Drawing.Font("新細明體", 9F);
            this.label49.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.label49.LocationFloat = new DevExpress.Utils.PointFloat(2350F, 0F);
            this.label49.Name = "label49";
            this.label49.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label49.SizeF = new System.Drawing.SizeF(78.125F, 25F);
            this.label49.StylePriority.UseBackColor = false;
            this.label49.StylePriority.UseBorderColor = false;
            this.label49.StylePriority.UseBorders = false;
            this.label49.StylePriority.UseFont = false;
            this.label49.StylePriority.UseForeColor = false;
            this.label49.StylePriority.UseTextAlignment = false;
            this.label49.Text = "公司別";
            this.label49.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // NOTIFYTOTALTableAdapter
            // 
            this.NOTIFYTOTALTableAdapter.SelectCommand = this.oleDbCommand1;
            this.NOTIFYTOTALTableAdapter.TableMappings.AddRange(new System.Data.Common.DataTableMapping[] {
                        new System.Data.Common.DataTableMapping("Table", "NOTIFYTOTAL", new System.Data.Common.DataColumnMapping[0])});
            // 
            // oleDbCommand1
            // 
            this.oleDbCommand1.CommandText = resources.GetString("oleDbCommand1.CommandText");
            this.oleDbCommand1.Connection = this.oleDbConnection1;
            // 
            // oleDbConnection1
            // 
            this.oleDbConnection1.ConnectionString = "Provider=MSDAORA.1;Password=cctv;User ID=cctv;Data Source=rdknet2;Persist Securit" +
                "y Info=True";
            // 
            // NotifyTotal
            // 
            this.NotifyTotal.DataSetName = "NotifyTotal";
            this.NotifyTotal.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            // 
            // controlStyle1
            // 
            this.controlStyle1.BackColor = System.Drawing.SystemColors.Info;
            this.controlStyle1.Name = "controlStyle1";
            // 
            // paraPrintEn
            // 
            this.paraPrintEn.Name = "paraPrintEn";
            this.paraPrintEn.Value = "";
            // 
            // rptC06_Totals
            // 
            this.Bands.AddRange(new DevExpress.XtraReports.UI.Band[] {
                        this.TopMargin,
                        this.Detail,
                        this.BottomMargin,
                        this.ReportHeader,
                        this.PageHeader});
            this.DataAdapter = this.NOTIFYTOTALTableAdapter;
            this.DataMember = "NOTIFYTOTAL";
            this.DataSource = this.NotifyTotal;
            this.ExportOptions.Xls.ShowGridLines = true;
            this.ExportOptions.Xlsx.ShowGridLines = true;
            this.Landscape = true;
            this.Margins = new System.Drawing.Printing.Margins(22, 30, 11, 46);
            this.Name = "rptC06_Totals";
            this.PageHeight = 2200;
            this.PageWidth = 3400;
            this.PaperKind = System.Drawing.Printing.PaperKind.DSheet;
            this.Parameters.AddRange(new DevExpress.XtraReports.Parameters.Parameter[] {
                        this.paraPrintEn});
            this.RequestParameters = false;
            this.ScriptLanguage = DevExpress.XtraReports.ScriptLanguage.VisualBasic;
            this.StyleSheet.AddRange(new DevExpress.XtraReports.UI.XRControlStyle[] {
                        this.controlStyle1});
            this.Version = "10.1";
            ((System.ComponentModel.ISupportInitialize)(this.NotifyTotal)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this)).EndInit();
        }
    }
}
namespace XtraReportSerialization {
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("NotifyTotal")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class NotifyTotal : global::System.Data.DataSet {
        private NOTIFYTOTALDataTable tableNOTIFYTOTAL;
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public NotifyTotal() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected NotifyTotal(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["NOTIFYTOTAL"] != null)) {
                    base.Tables.Add(new NOTIFYTOTALDataTable(ds.Tables["NOTIFYTOTAL"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public NOTIFYTOTALDataTable NOTIFYTOTAL {
            get {
                return this.tableNOTIFYTOTAL;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            NotifyTotal cln = ((NotifyTotal)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["NOTIFYTOTAL"] != null)) {
                    base.Tables.Add(new NOTIFYTOTALDataTable(ds.Tables["NOTIFYTOTAL"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableNOTIFYTOTAL = ((NOTIFYTOTALDataTable)(base.Tables["NOTIFYTOTAL"]));
            if ((initTable == true)) {
                if ((this.tableNOTIFYTOTAL != null)) {
                    this.tableNOTIFYTOTAL.InitVars();
                }
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "NotifyTotal";
            this.Prefix = "";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableNOTIFYTOTAL = new NOTIFYTOTALDataTable();
            base.Tables.Add(this.tableNOTIFYTOTAL);
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeNOTIFYTOTAL() {
            return false;
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            NotifyTotal ds = new NotifyTotal();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        public delegate void NOTIFYTOTALRowChangeEventHandler(object sender, NOTIFYTOTALRowChangeEvent e);
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class NOTIFYTOTALDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            private global::System.Data.DataColumn columnINVDATE;
            private global::System.Data.DataColumn columnCOMPID;
            private global::System.Data.DataColumn column總發票筆數;
            private global::System.Data.DataColumn column非電子發票筆數;
            private global::System.Data.DataColumn column電子發票筆數;
            private global::System.Data.DataColumn column非電子發票筆數_非作廢;
            private global::System.Data.DataColumn column電子發票筆數_非作廢;
            private global::System.Data.DataColumn column非電子發票筆數_作廢;
            private global::System.Data.DataColumn column電子發票筆數_作廢;
            private global::System.Data.DataColumn column總作廢筆數;
            private global::System.Data.DataColumn column非電子發票筆數_捐贈;
            private global::System.Data.DataColumn column電子發票筆數_捐贈;
            private global::System.Data.DataColumn column通知狀態成功筆數;
            private global::System.Data.DataColumn column通知狀態失敗筆數;
            private global::System.Data.DataColumn columnEMAIL發送成功筆數;
            private global::System.Data.DataColumn columnEMAIL發送回查筆數;
            private global::System.Data.DataColumn columnEMAIL發送失敗筆數;
            private global::System.Data.DataColumn column簡訊發送成功筆數;
            private global::System.Data.DataColumn column簡訊回查成功筆數;
            private global::System.Data.DataColumn column簡訊發送失敗筆數;
            private global::System.Data.DataColumn columnTVMAIL發送成功筆數;
            private global::System.Data.DataColumn columnTVMAIL發送失敗筆數;
            private global::System.Data.DataColumn columnCM導流發送成功筆數;
            private global::System.Data.DataColumn columnCM導流發送失敗筆數;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NOTIFYTOTALDataTable() {
                this.TableName = "NOTIFYTOTAL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal NOTIFYTOTALDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected NOTIFYTOTALDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INVDATEColumn {
                get {
                    return this.columnINVDATE;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPIDColumn {
                get {
                    return this.columnCOMPID;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 總發票筆數Column {
                get {
                    return this.column總發票筆數;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 非電子發票筆數Column {
                get {
                    return this.column非電子發票筆數;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 電子發票筆數Column {
                get {
                    return this.column電子發票筆數;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 非電子發票筆數_非作廢Column {
                get {
                    return this.column非電子發票筆數_非作廢;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 電子發票筆數_非作廢Column {
                get {
                    return this.column電子發票筆數_非作廢;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 非電子發票筆數_作廢Column {
                get {
                    return this.column非電子發票筆數_作廢;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 電子發票筆數_作廢Column {
                get {
                    return this.column電子發票筆數_作廢;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 總作廢筆數Column {
                get {
                    return this.column總作廢筆數;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 非電子發票筆數_捐贈Column {
                get {
                    return this.column非電子發票筆數_捐贈;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 電子發票筆數_捐贈Column {
                get {
                    return this.column電子發票筆數_捐贈;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 通知狀態成功筆數Column {
                get {
                    return this.column通知狀態成功筆數;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 通知狀態失敗筆數Column {
                get {
                    return this.column通知狀態失敗筆數;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMAIL發送成功筆數Column {
                get {
                    return this.columnEMAIL發送成功筆數;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMAIL發送回查筆數Column {
                get {
                    return this.columnEMAIL發送回查筆數;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMAIL發送失敗筆數Column {
                get {
                    return this.columnEMAIL發送失敗筆數;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 簡訊發送成功筆數Column {
                get {
                    return this.column簡訊發送成功筆數;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 簡訊回查成功筆數Column {
                get {
                    return this.column簡訊回查成功筆數;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 簡訊發送失敗筆數Column {
                get {
                    return this.column簡訊發送失敗筆數;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TVMAIL發送成功筆數Column {
                get {
                    return this.columnTVMAIL發送成功筆數;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TVMAIL發送失敗筆數Column {
                get {
                    return this.columnTVMAIL發送失敗筆數;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CM導流發送成功筆數Column {
                get {
                    return this.columnCM導流發送成功筆數;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CM導流發送失敗筆數Column {
                get {
                    return this.columnCM導流發送失敗筆數;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NOTIFYTOTALRow this[int index] {
                get {
                    return ((NOTIFYTOTALRow)(this.Rows[index]));
                }
            }
            public event NOTIFYTOTALRowChangeEventHandler NOTIFYTOTALRowChanging;
            public event NOTIFYTOTALRowChangeEventHandler NOTIFYTOTALRowChanged;
            public event NOTIFYTOTALRowChangeEventHandler NOTIFYTOTALRowDeleting;
            public event NOTIFYTOTALRowChangeEventHandler NOTIFYTOTALRowDeleted;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddNOTIFYTOTALRow(NOTIFYTOTALRow row) {
                this.Rows.Add(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NOTIFYTOTALRow AddNOTIFYTOTALRow(
                        System.DateTime INVDATE, 
                        string COMPID, 
                        double 總發票筆數, 
                        double 非電子發票筆數, 
                        double 電子發票筆數, 
                        double 非電子發票筆數_非作廢, 
                        double 電子發票筆數_非作廢, 
                        double 非電子發票筆數_作廢, 
                        double 電子發票筆數_作廢, 
                        double 總作廢筆數, 
                        double 非電子發票筆數_捐贈, 
                        double 電子發票筆數_捐贈, 
                        double 通知狀態成功筆數, 
                        double 通知狀態失敗筆數, 
                        double EMAIL發送成功筆數, 
                        double EMAIL發送回查筆數, 
                        double EMAIL發送失敗筆數, 
                        double 簡訊發送成功筆數, 
                        double 簡訊回查成功筆數, 
                        double 簡訊發送失敗筆數, 
                        double TVMAIL發送成功筆數, 
                        double TVMAIL發送失敗筆數, 
                        double CM導流發送成功筆數, 
                        double CM導流發送失敗筆數) {
                NOTIFYTOTALRow rowNOTIFYTOTALRow = ((NOTIFYTOTALRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        INVDATE,
                        COMPID,
                        總發票筆數,
                        非電子發票筆數,
                        電子發票筆數,
                        非電子發票筆數_非作廢,
                        電子發票筆數_非作廢,
                        非電子發票筆數_作廢,
                        電子發票筆數_作廢,
                        總作廢筆數,
                        非電子發票筆數_捐贈,
                        電子發票筆數_捐贈,
                        通知狀態成功筆數,
                        通知狀態失敗筆數,
                        EMAIL發送成功筆數,
                        EMAIL發送回查筆數,
                        EMAIL發送失敗筆數,
                        簡訊發送成功筆數,
                        簡訊回查成功筆數,
                        簡訊發送失敗筆數,
                        TVMAIL發送成功筆數,
                        TVMAIL發送失敗筆數,
                        CM導流發送成功筆數,
                        CM導流發送失敗筆數};
                rowNOTIFYTOTALRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowNOTIFYTOTALRow);
                return rowNOTIFYTOTALRow;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                NOTIFYTOTALDataTable cln = ((NOTIFYTOTALDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new NOTIFYTOTALDataTable();
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnINVDATE = base.Columns["INVDATE"];
                this.columnCOMPID = base.Columns["COMPID"];
                this.column總發票筆數 = base.Columns["總發票筆數"];
                this.column非電子發票筆數 = base.Columns["非電子發票筆數"];
                this.column電子發票筆數 = base.Columns["電子發票筆數"];
                this.column非電子發票筆數_非作廢 = base.Columns["非電子發票筆數_非作廢"];
                this.column電子發票筆數_非作廢 = base.Columns["電子發票筆數_非作廢"];
                this.column非電子發票筆數_作廢 = base.Columns["非電子發票筆數_作廢"];
                this.column電子發票筆數_作廢 = base.Columns["電子發票筆數_作廢"];
                this.column總作廢筆數 = base.Columns["總作廢筆數"];
                this.column非電子發票筆數_捐贈 = base.Columns["非電子發票筆數_捐贈"];
                this.column電子發票筆數_捐贈 = base.Columns["電子發票筆數_捐贈"];
                this.column通知狀態成功筆數 = base.Columns["通知狀態成功筆數"];
                this.column通知狀態失敗筆數 = base.Columns["通知狀態失敗筆數"];
                this.columnEMAIL發送成功筆數 = base.Columns["EMAIL發送成功筆數"];
                this.columnEMAIL發送回查筆數 = base.Columns["EMAIL發送回查筆數"];
                this.columnEMAIL發送失敗筆數 = base.Columns["EMAIL發送失敗筆數"];
                this.column簡訊發送成功筆數 = base.Columns["簡訊發送成功筆數"];
                this.column簡訊回查成功筆數 = base.Columns["簡訊回查成功筆數"];
                this.column簡訊發送失敗筆數 = base.Columns["簡訊發送失敗筆數"];
                this.columnTVMAIL發送成功筆數 = base.Columns["TVMAIL發送成功筆數"];
                this.columnTVMAIL發送失敗筆數 = base.Columns["TVMAIL發送失敗筆數"];
                this.columnCM導流發送成功筆數 = base.Columns["CM導流發送成功筆數"];
                this.columnCM導流發送失敗筆數 = base.Columns["CM導流發送失敗筆數"];
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnINVDATE = new global::System.Data.DataColumn("INVDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINVDATE);
                this.columnCOMPID = new global::System.Data.DataColumn("COMPID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPID);
                this.column總發票筆數 = new global::System.Data.DataColumn("總發票筆數", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column總發票筆數);
                this.column非電子發票筆數 = new global::System.Data.DataColumn("非電子發票筆數", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column非電子發票筆數);
                this.column電子發票筆數 = new global::System.Data.DataColumn("電子發票筆數", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column電子發票筆數);
                this.column非電子發票筆數_非作廢 = new global::System.Data.DataColumn("非電子發票筆數_非作廢", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column非電子發票筆數_非作廢);
                this.column電子發票筆數_非作廢 = new global::System.Data.DataColumn("電子發票筆數_非作廢", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column電子發票筆數_非作廢);
                this.column非電子發票筆數_作廢 = new global::System.Data.DataColumn("非電子發票筆數_作廢", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column非電子發票筆數_作廢);
                this.column電子發票筆數_作廢 = new global::System.Data.DataColumn("電子發票筆數_作廢", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column電子發票筆數_作廢);
                this.column總作廢筆數 = new global::System.Data.DataColumn("總作廢筆數", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column總作廢筆數);
                this.column非電子發票筆數_捐贈 = new global::System.Data.DataColumn("非電子發票筆數_捐贈", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column非電子發票筆數_捐贈);
                this.column電子發票筆數_捐贈 = new global::System.Data.DataColumn("電子發票筆數_捐贈", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column電子發票筆數_捐贈);
                this.column通知狀態成功筆數 = new global::System.Data.DataColumn("通知狀態成功筆數", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column通知狀態成功筆數);
                this.column通知狀態失敗筆數 = new global::System.Data.DataColumn("通知狀態失敗筆數", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column通知狀態失敗筆數);
                this.columnEMAIL發送成功筆數 = new global::System.Data.DataColumn("EMAIL發送成功筆數", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAIL發送成功筆數);
                this.columnEMAIL發送回查筆數 = new global::System.Data.DataColumn("EMAIL發送回查筆數", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAIL發送回查筆數);
                this.columnEMAIL發送失敗筆數 = new global::System.Data.DataColumn("EMAIL發送失敗筆數", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAIL發送失敗筆數);
                this.column簡訊發送成功筆數 = new global::System.Data.DataColumn("簡訊發送成功筆數", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column簡訊發送成功筆數);
                this.column簡訊回查成功筆數 = new global::System.Data.DataColumn("簡訊回查成功筆數", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column簡訊回查成功筆數);
                this.column簡訊發送失敗筆數 = new global::System.Data.DataColumn("簡訊發送失敗筆數", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column簡訊發送失敗筆數);
                this.columnTVMAIL發送成功筆數 = new global::System.Data.DataColumn("TVMAIL發送成功筆數", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTVMAIL發送成功筆數);
                this.columnTVMAIL發送失敗筆數 = new global::System.Data.DataColumn("TVMAIL發送失敗筆數", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTVMAIL發送失敗筆數);
                this.columnCM導流發送成功筆數 = new global::System.Data.DataColumn("CM導流發送成功筆數", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCM導流發送成功筆數);
                this.columnCM導流發送失敗筆數 = new global::System.Data.DataColumn("CM導流發送失敗筆數", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCM導流發送失敗筆數);
                this.columnCOMPID.MaxLength = 6;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NOTIFYTOTALRow NewNOTIFYTOTALRow() {
                return ((NOTIFYTOTALRow)(this.NewRow()));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new NOTIFYTOTALRow(builder);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(NOTIFYTOTALRow);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.NOTIFYTOTALRowChanged != null)) {
                    this.NOTIFYTOTALRowChanged(this, new NOTIFYTOTALRowChangeEvent(((NOTIFYTOTALRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.NOTIFYTOTALRowChanging != null)) {
                    this.NOTIFYTOTALRowChanging(this, new NOTIFYTOTALRowChangeEvent(((NOTIFYTOTALRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.NOTIFYTOTALRowDeleted != null)) {
                    this.NOTIFYTOTALRowDeleted(this, new NOTIFYTOTALRowChangeEvent(((NOTIFYTOTALRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.NOTIFYTOTALRowDeleting != null)) {
                    this.NOTIFYTOTALRowDeleting(this, new NOTIFYTOTALRowChangeEvent(((NOTIFYTOTALRow)(e.Row)), e.Action));
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveNOTIFYTOTALRow(NOTIFYTOTALRow row) {
                this.Rows.Remove(row);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                NotifyTotal ds = new NotifyTotal();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "NOTIFYTOTALDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class NOTIFYTOTALRow : global::System.Data.DataRow {
            private NOTIFYTOTALDataTable tableNOTIFYTOTAL;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal NOTIFYTOTALRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableNOTIFYTOTAL = ((NOTIFYTOTALDataTable)(this.Table));
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime INVDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableNOTIFYTOTAL.INVDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'NOTIFYTOTAL\' 中資料行 \'INVDATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNOTIFYTOTAL.INVDATEColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMPID {
                get {
                    try {
                        return ((string)(this[this.tableNOTIFYTOTAL.COMPIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'NOTIFYTOTAL\' 中資料行 \'COMPID\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNOTIFYTOTAL.COMPIDColumn] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double 總發票筆數 {
                get {
                    try {
                        return ((double)(this[this.tableNOTIFYTOTAL.總發票筆數Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'NOTIFYTOTAL\' 中資料行 \'總發票筆數\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNOTIFYTOTAL.總發票筆數Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double 非電子發票筆數 {
                get {
                    try {
                        return ((double)(this[this.tableNOTIFYTOTAL.非電子發票筆數Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'NOTIFYTOTAL\' 中資料行 \'非電子發票筆數\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNOTIFYTOTAL.非電子發票筆數Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double 電子發票筆數 {
                get {
                    try {
                        return ((double)(this[this.tableNOTIFYTOTAL.電子發票筆數Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'NOTIFYTOTAL\' 中資料行 \'電子發票筆數\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNOTIFYTOTAL.電子發票筆數Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double 非電子發票筆數_非作廢 {
                get {
                    try {
                        return ((double)(this[this.tableNOTIFYTOTAL.非電子發票筆數_非作廢Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'NOTIFYTOTAL\' 中資料行 \'非電子發票筆數_非作廢\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNOTIFYTOTAL.非電子發票筆數_非作廢Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double 電子發票筆數_非作廢 {
                get {
                    try {
                        return ((double)(this[this.tableNOTIFYTOTAL.電子發票筆數_非作廢Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'NOTIFYTOTAL\' 中資料行 \'電子發票筆數_非作廢\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNOTIFYTOTAL.電子發票筆數_非作廢Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double 非電子發票筆數_作廢 {
                get {
                    try {
                        return ((double)(this[this.tableNOTIFYTOTAL.非電子發票筆數_作廢Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'NOTIFYTOTAL\' 中資料行 \'非電子發票筆數_作廢\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNOTIFYTOTAL.非電子發票筆數_作廢Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double 電子發票筆數_作廢 {
                get {
                    try {
                        return ((double)(this[this.tableNOTIFYTOTAL.電子發票筆數_作廢Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'NOTIFYTOTAL\' 中資料行 \'電子發票筆數_作廢\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNOTIFYTOTAL.電子發票筆數_作廢Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double 總作廢筆數 {
                get {
                    try {
                        return ((double)(this[this.tableNOTIFYTOTAL.總作廢筆數Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'NOTIFYTOTAL\' 中資料行 \'總作廢筆數\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNOTIFYTOTAL.總作廢筆數Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double 非電子發票筆數_捐贈 {
                get {
                    try {
                        return ((double)(this[this.tableNOTIFYTOTAL.非電子發票筆數_捐贈Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'NOTIFYTOTAL\' 中資料行 \'非電子發票筆數_捐贈\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNOTIFYTOTAL.非電子發票筆數_捐贈Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double 電子發票筆數_捐贈 {
                get {
                    try {
                        return ((double)(this[this.tableNOTIFYTOTAL.電子發票筆數_捐贈Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'NOTIFYTOTAL\' 中資料行 \'電子發票筆數_捐贈\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNOTIFYTOTAL.電子發票筆數_捐贈Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double 通知狀態成功筆數 {
                get {
                    try {
                        return ((double)(this[this.tableNOTIFYTOTAL.通知狀態成功筆數Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'NOTIFYTOTAL\' 中資料行 \'通知狀態成功筆數\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNOTIFYTOTAL.通知狀態成功筆數Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double 通知狀態失敗筆數 {
                get {
                    try {
                        return ((double)(this[this.tableNOTIFYTOTAL.通知狀態失敗筆數Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'NOTIFYTOTAL\' 中資料行 \'通知狀態失敗筆數\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNOTIFYTOTAL.通知狀態失敗筆數Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double EMAIL發送成功筆數 {
                get {
                    try {
                        return ((double)(this[this.tableNOTIFYTOTAL.EMAIL發送成功筆數Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'NOTIFYTOTAL\' 中資料行 \'EMAIL發送成功筆數\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNOTIFYTOTAL.EMAIL發送成功筆數Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double EMAIL發送回查筆數 {
                get {
                    try {
                        return ((double)(this[this.tableNOTIFYTOTAL.EMAIL發送回查筆數Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'NOTIFYTOTAL\' 中資料行 \'EMAIL發送回查筆數\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNOTIFYTOTAL.EMAIL發送回查筆數Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double EMAIL發送失敗筆數 {
                get {
                    try {
                        return ((double)(this[this.tableNOTIFYTOTAL.EMAIL發送失敗筆數Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'NOTIFYTOTAL\' 中資料行 \'EMAIL發送失敗筆數\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNOTIFYTOTAL.EMAIL發送失敗筆數Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double 簡訊發送成功筆數 {
                get {
                    try {
                        return ((double)(this[this.tableNOTIFYTOTAL.簡訊發送成功筆數Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'NOTIFYTOTAL\' 中資料行 \'簡訊發送成功筆數\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNOTIFYTOTAL.簡訊發送成功筆數Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double 簡訊回查成功筆數 {
                get {
                    try {
                        return ((double)(this[this.tableNOTIFYTOTAL.簡訊回查成功筆數Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'NOTIFYTOTAL\' 中資料行 \'簡訊回查成功筆數\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNOTIFYTOTAL.簡訊回查成功筆數Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double 簡訊發送失敗筆數 {
                get {
                    try {
                        return ((double)(this[this.tableNOTIFYTOTAL.簡訊發送失敗筆數Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'NOTIFYTOTAL\' 中資料行 \'簡訊發送失敗筆數\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNOTIFYTOTAL.簡訊發送失敗筆數Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TVMAIL發送成功筆數 {
                get {
                    try {
                        return ((double)(this[this.tableNOTIFYTOTAL.TVMAIL發送成功筆數Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'NOTIFYTOTAL\' 中資料行 \'TVMAIL發送成功筆數\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNOTIFYTOTAL.TVMAIL發送成功筆數Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double TVMAIL發送失敗筆數 {
                get {
                    try {
                        return ((double)(this[this.tableNOTIFYTOTAL.TVMAIL發送失敗筆數Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'NOTIFYTOTAL\' 中資料行 \'TVMAIL發送失敗筆數\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNOTIFYTOTAL.TVMAIL發送失敗筆數Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double CM導流發送成功筆數 {
                get {
                    try {
                        return ((double)(this[this.tableNOTIFYTOTAL.CM導流發送成功筆數Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'NOTIFYTOTAL\' 中資料行 \'CM導流發送成功筆數\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNOTIFYTOTAL.CM導流發送成功筆數Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double CM導流發送失敗筆數 {
                get {
                    try {
                        return ((double)(this[this.tableNOTIFYTOTAL.CM導流發送失敗筆數Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'NOTIFYTOTAL\' 中資料行 \'CM導流發送失敗筆數\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableNOTIFYTOTAL.CM導流發送失敗筆數Column] = value;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINVDATENull() {
                return this.IsNull(this.tableNOTIFYTOTAL.INVDATEColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINVDATENull() {
                this[this.tableNOTIFYTOTAL.INVDATEColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMPIDNull() {
                return this.IsNull(this.tableNOTIFYTOTAL.COMPIDColumn);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMPIDNull() {
                this[this.tableNOTIFYTOTAL.COMPIDColumn] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is總發票筆數Null() {
                return this.IsNull(this.tableNOTIFYTOTAL.總發票筆數Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set總發票筆數Null() {
                this[this.tableNOTIFYTOTAL.總發票筆數Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is非電子發票筆數Null() {
                return this.IsNull(this.tableNOTIFYTOTAL.非電子發票筆數Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set非電子發票筆數Null() {
                this[this.tableNOTIFYTOTAL.非電子發票筆數Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is電子發票筆數Null() {
                return this.IsNull(this.tableNOTIFYTOTAL.電子發票筆數Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set電子發票筆數Null() {
                this[this.tableNOTIFYTOTAL.電子發票筆數Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is非電子發票筆數_非作廢Null() {
                return this.IsNull(this.tableNOTIFYTOTAL.非電子發票筆數_非作廢Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set非電子發票筆數_非作廢Null() {
                this[this.tableNOTIFYTOTAL.非電子發票筆數_非作廢Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is電子發票筆數_非作廢Null() {
                return this.IsNull(this.tableNOTIFYTOTAL.電子發票筆數_非作廢Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set電子發票筆數_非作廢Null() {
                this[this.tableNOTIFYTOTAL.電子發票筆數_非作廢Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is非電子發票筆數_作廢Null() {
                return this.IsNull(this.tableNOTIFYTOTAL.非電子發票筆數_作廢Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set非電子發票筆數_作廢Null() {
                this[this.tableNOTIFYTOTAL.非電子發票筆數_作廢Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is電子發票筆數_作廢Null() {
                return this.IsNull(this.tableNOTIFYTOTAL.電子發票筆數_作廢Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set電子發票筆數_作廢Null() {
                this[this.tableNOTIFYTOTAL.電子發票筆數_作廢Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is總作廢筆數Null() {
                return this.IsNull(this.tableNOTIFYTOTAL.總作廢筆數Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set總作廢筆數Null() {
                this[this.tableNOTIFYTOTAL.總作廢筆數Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is非電子發票筆數_捐贈Null() {
                return this.IsNull(this.tableNOTIFYTOTAL.非電子發票筆數_捐贈Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set非電子發票筆數_捐贈Null() {
                this[this.tableNOTIFYTOTAL.非電子發票筆數_捐贈Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is電子發票筆數_捐贈Null() {
                return this.IsNull(this.tableNOTIFYTOTAL.電子發票筆數_捐贈Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set電子發票筆數_捐贈Null() {
                this[this.tableNOTIFYTOTAL.電子發票筆數_捐贈Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is通知狀態成功筆數Null() {
                return this.IsNull(this.tableNOTIFYTOTAL.通知狀態成功筆數Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set通知狀態成功筆數Null() {
                this[this.tableNOTIFYTOTAL.通知狀態成功筆數Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is通知狀態失敗筆數Null() {
                return this.IsNull(this.tableNOTIFYTOTAL.通知狀態失敗筆數Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set通知狀態失敗筆數Null() {
                this[this.tableNOTIFYTOTAL.通知狀態失敗筆數Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMAIL發送成功筆數Null() {
                return this.IsNull(this.tableNOTIFYTOTAL.EMAIL發送成功筆數Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMAIL發送成功筆數Null() {
                this[this.tableNOTIFYTOTAL.EMAIL發送成功筆數Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMAIL發送回查筆數Null() {
                return this.IsNull(this.tableNOTIFYTOTAL.EMAIL發送回查筆數Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMAIL發送回查筆數Null() {
                this[this.tableNOTIFYTOTAL.EMAIL發送回查筆數Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMAIL發送失敗筆數Null() {
                return this.IsNull(this.tableNOTIFYTOTAL.EMAIL發送失敗筆數Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMAIL發送失敗筆數Null() {
                this[this.tableNOTIFYTOTAL.EMAIL發送失敗筆數Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is簡訊發送成功筆數Null() {
                return this.IsNull(this.tableNOTIFYTOTAL.簡訊發送成功筆數Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set簡訊發送成功筆數Null() {
                this[this.tableNOTIFYTOTAL.簡訊發送成功筆數Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is簡訊回查成功筆數Null() {
                return this.IsNull(this.tableNOTIFYTOTAL.簡訊回查成功筆數Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set簡訊回查成功筆數Null() {
                this[this.tableNOTIFYTOTAL.簡訊回查成功筆數Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is簡訊發送失敗筆數Null() {
                return this.IsNull(this.tableNOTIFYTOTAL.簡訊發送失敗筆數Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set簡訊發送失敗筆數Null() {
                this[this.tableNOTIFYTOTAL.簡訊發送失敗筆數Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTVMAIL發送成功筆數Null() {
                return this.IsNull(this.tableNOTIFYTOTAL.TVMAIL發送成功筆數Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTVMAIL發送成功筆數Null() {
                this[this.tableNOTIFYTOTAL.TVMAIL發送成功筆數Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTVMAIL發送失敗筆數Null() {
                return this.IsNull(this.tableNOTIFYTOTAL.TVMAIL發送失敗筆數Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTVMAIL發送失敗筆數Null() {
                this[this.tableNOTIFYTOTAL.TVMAIL發送失敗筆數Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCM導流發送成功筆數Null() {
                return this.IsNull(this.tableNOTIFYTOTAL.CM導流發送成功筆數Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCM導流發送成功筆數Null() {
                this[this.tableNOTIFYTOTAL.CM導流發送成功筆數Column] = global::System.Convert.DBNull;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCM導流發送失敗筆數Null() {
                return this.IsNull(this.tableNOTIFYTOTAL.CM導流發送失敗筆數Column);
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCM導流發送失敗筆數Null() {
                this[this.tableNOTIFYTOTAL.CM導流發送失敗筆數Column] = global::System.Convert.DBNull;
            }
        }
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class NOTIFYTOTALRowChangeEvent : global::System.EventArgs {
            private NOTIFYTOTALRow eventRow;
            private global::System.Data.DataRowAction eventAction;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NOTIFYTOTALRowChangeEvent(NOTIFYTOTALRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public NOTIFYTOTALRow Row {
                get {
                    return this.eventRow;
                }
            }
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
