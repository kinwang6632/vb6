unit CsHorse2Library_Invk;

{----------------------------------------------------------------------------}
{ This unit was automatically generated by the RemObjects SDK after reading  }
{ the RODL file associated with this project .                               }
{                                                                            }
{ Do not modify this unit manually, or your changes will be lost when this   }
{ unit is regenerated the next time you compile the project.                 }
{----------------------------------------------------------------------------}

{$I Remobjects.inc}

interface

uses
  {vcl:} Classes,
  {RemObjects:} uROXMLIntf, uROServer, uROServerIntf, uROTypes, uROClientIntf,
  {Generated:} CsHorse2Library_Intf;

type
  TLoginService_Invoker = class(TROInvoker)
  private
  protected
  published
    procedure Invoke_Login(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_Logout(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_GetClientParam(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_GetOraSysDate(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
  end;

  TAnnService_Invoker = class(TROInvoker)
  private
  protected
  published
    procedure Invoke_GetSO021(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_GetSOListText(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_GetCD042(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_GetSO022(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_GetSO023(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
  end;

  TCallbackService_Invoker = class(TROInvoker)
  private
  protected
  published
    procedure Invoke_GetGroupList(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_GetUserList(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_SendMsg(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_GetMsgList(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_GetMsg(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_GetOraSysDate(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
    procedure Invoke_SetMsgRead(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
  end;

implementation

uses
  {RemObjects:} uRORes, uROClient;

{ TLoginService_Invoker }

procedure TLoginService_Invoker.Invoke_Login(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function Login(var AInfo: TLoginInfo; var AErrMsg: String): Boolean; }
var
  AInfo: CsHorse2Library_Intf.TLoginInfo;
  __in_AInfo: CsHorse2Library_Intf.TLoginInfo;
  AErrMsg: String;
  lResult: Boolean;
  __lObjectDisposer: TROObjectDisposer;
begin
  AInfo := nil;
  __in_AInfo := nil;
  try
    __Message.Read('AInfo', TypeInfo(CsHorse2Library_Intf.TLoginInfo), AInfo, []);
    __in_AInfo := AInfo;
    __Message.Read('AErrMsg', TypeInfo(String), AErrMsg, []);

    lResult := (__Instance as ILoginService).Login(AInfo, AErrMsg);

    __Message.InitializeResponseMessage(__Transport, 'CsHorse2Library', 'LoginService', 'LoginResponse');
    __Message.Write('Result', TypeInfo(Boolean), lResult, []);
    __Message.Write('AInfo', TypeInfo(CsHorse2Library_Intf.TLoginInfo), AInfo, []);
    __Message.Write('AErrMsg', TypeInfo(String), AErrMsg, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(__in_AInfo);
      __lObjectDisposer.Add(AInfo);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TLoginService_Invoker.Invoke_Logout(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure Logout(const AInfo: TLoginInfo); }
var
  AInfo: CsHorse2Library_Intf.TLoginInfo;
  __lObjectDisposer: TROObjectDisposer;
begin
  AInfo := nil;
  try
    __Message.Read('AInfo', TypeInfo(CsHorse2Library_Intf.TLoginInfo), AInfo, []);

    (__Instance as ILoginService).Logout(AInfo);

    __Message.InitializeResponseMessage(__Transport, 'CsHorse2Library', 'LoginService', 'LogoutResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(AInfo);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TLoginService_Invoker.Invoke_GetClientParam(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function GetClientParam: Binary; }
var
  lResult: Binary;
  __lObjectDisposer: TROObjectDisposer;
begin
  lResult := nil;
  try
    lResult := (__Instance as ILoginService).GetClientParam;

    __Message.InitializeResponseMessage(__Transport, 'CsHorse2Library', 'LoginService', 'GetClientParamResponse');
    __Message.Write('Result', TypeInfo(Binary), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TLoginService_Invoker.Invoke_GetOraSysDate(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function GetOraSysDate(const ACompCode: String): String; }
var
  ACompCode: String;
  lResult: String;
begin
  try
    __Message.Read('ACompCode', TypeInfo(String), ACompCode, []);

    lResult := (__Instance as ILoginService).GetOraSysDate(ACompCode);

    __Message.InitializeResponseMessage(__Transport, 'CsHorse2Library', 'LoginService', 'GetOraSysDateResponse');
    __Message.Write('Result', TypeInfo(String), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

{ TAnnService_Invoker }

procedure TAnnService_Invoker.Invoke_GetSO021(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function GetSO021(const AInfo: TLoginInfo): Binary; }
var
  AInfo: CsHorse2Library_Intf.TLoginInfo;
  lResult: Binary;
  __lObjectDisposer: TROObjectDisposer;
begin
  AInfo := nil;
  lResult := nil;
  try
    __Message.Read('AInfo', TypeInfo(CsHorse2Library_Intf.TLoginInfo), AInfo, []);

    lResult := (__Instance as IAnnService).GetSO021(AInfo);

    __Message.InitializeResponseMessage(__Transport, 'CsHorse2Library', 'AnnService', 'GetSO021Response');
    __Message.Write('Result', TypeInfo(Binary), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(AInfo);
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TAnnService_Invoker.Invoke_GetSOListText(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function GetSOListText(var AInfo: TLoginInfo): String; }
var
  AInfo: CsHorse2Library_Intf.TLoginInfo;
  __in_AInfo: CsHorse2Library_Intf.TLoginInfo;
  lResult: String;
  __lObjectDisposer: TROObjectDisposer;
begin
  AInfo := nil;
  __in_AInfo := nil;
  try
    __Message.Read('AInfo', TypeInfo(CsHorse2Library_Intf.TLoginInfo), AInfo, []);
    __in_AInfo := AInfo;

    lResult := (__Instance as IAnnService).GetSOListText(AInfo);

    __Message.InitializeResponseMessage(__Transport, 'CsHorse2Library', 'AnnService', 'GetSOListTextResponse');
    __Message.Write('Result', TypeInfo(String), lResult, []);
    __Message.Write('AInfo', TypeInfo(CsHorse2Library_Intf.TLoginInfo), AInfo, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(__in_AInfo);
      __lObjectDisposer.Add(AInfo);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TAnnService_Invoker.Invoke_GetCD042(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function GetCD042(const AInfo: TLoginInfo): Binary; }
var
  AInfo: CsHorse2Library_Intf.TLoginInfo;
  lResult: Binary;
  __lObjectDisposer: TROObjectDisposer;
begin
  AInfo := nil;
  lResult := nil;
  try
    __Message.Read('AInfo', TypeInfo(CsHorse2Library_Intf.TLoginInfo), AInfo, []);

    lResult := (__Instance as IAnnService).GetCD042(AInfo);

    __Message.InitializeResponseMessage(__Transport, 'CsHorse2Library', 'AnnService', 'GetCD042Response');
    __Message.Write('Result', TypeInfo(Binary), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(AInfo);
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TAnnService_Invoker.Invoke_GetSO022(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function GetSO022(const AInfo: TLoginInfo): Binary; }
var
  AInfo: CsHorse2Library_Intf.TLoginInfo;
  lResult: Binary;
  __lObjectDisposer: TROObjectDisposer;
begin
  AInfo := nil;
  lResult := nil;
  try
    __Message.Read('AInfo', TypeInfo(CsHorse2Library_Intf.TLoginInfo), AInfo, []);

    lResult := (__Instance as IAnnService).GetSO022(AInfo);

    __Message.InitializeResponseMessage(__Transport, 'CsHorse2Library', 'AnnService', 'GetSO022Response');
    __Message.Write('Result', TypeInfo(Binary), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(AInfo);
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TAnnService_Invoker.Invoke_GetSO023(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function GetSO023(const AInfo: TLoginInfo): Binary; }
var
  AInfo: CsHorse2Library_Intf.TLoginInfo;
  lResult: Binary;
  __lObjectDisposer: TROObjectDisposer;
begin
  AInfo := nil;
  lResult := nil;
  try
    __Message.Read('AInfo', TypeInfo(CsHorse2Library_Intf.TLoginInfo), AInfo, []);

    lResult := (__Instance as IAnnService).GetSO023(AInfo);

    __Message.InitializeResponseMessage(__Transport, 'CsHorse2Library', 'AnnService', 'GetSO023Response');
    __Message.Write('Result', TypeInfo(Binary), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(AInfo);
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

{ TCallbackService_Invoker }

procedure TCallbackService_Invoker.Invoke_GetGroupList(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function GetGroupList(const AInfo: TLoginInfo): Binary; }
var
  AInfo: CsHorse2Library_Intf.TLoginInfo;
  lResult: Binary;
  __lObjectDisposer: TROObjectDisposer;
begin
  AInfo := nil;
  lResult := nil;
  try
    __Message.Read('AInfo', TypeInfo(CsHorse2Library_Intf.TLoginInfo), AInfo, []);

    lResult := (__Instance as ICallbackService).GetGroupList(AInfo);

    __Message.InitializeResponseMessage(__Transport, 'CsHorse2Library', 'CallbackService', 'GetGroupListResponse');
    __Message.Write('Result', TypeInfo(Binary), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(AInfo);
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TCallbackService_Invoker.Invoke_GetUserList(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function GetUserList(const AInfo: TLoginInfo): Binary; }
var
  AInfo: CsHorse2Library_Intf.TLoginInfo;
  lResult: Binary;
  __lObjectDisposer: TROObjectDisposer;
begin
  AInfo := nil;
  lResult := nil;
  try
    __Message.Read('AInfo', TypeInfo(CsHorse2Library_Intf.TLoginInfo), AInfo, []);

    lResult := (__Instance as ICallbackService).GetUserList(AInfo);

    __Message.InitializeResponseMessage(__Transport, 'CsHorse2Library', 'CallbackService', 'GetUserListResponse');
    __Message.Write('Result', TypeInfo(Binary), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(AInfo);
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TCallbackService_Invoker.Invoke_SendMsg(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function SendMsg(const AInfo: TLoginInfo; const ARecver: Binary; const AMsg: Binary; const AMsgInfo: TMsgInfo; var AErrMsg: String): Boolean; }
var
  AInfo: CsHorse2Library_Intf.TLoginInfo;
  ARecver: Binary;
  AMsg: Binary;
  AMsgInfo: CsHorse2Library_Intf.TMsgInfo;
  AErrMsg: String;
  lResult: Boolean;
  __lObjectDisposer: TROObjectDisposer;
begin
  AInfo := nil;
  ARecver := nil;
  AMsg := nil;
  AMsgInfo := nil;
  try
    __Message.Read('AInfo', TypeInfo(CsHorse2Library_Intf.TLoginInfo), AInfo, []);
    __Message.Read('ARecver', TypeInfo(Binary), ARecver, []);
    __Message.Read('AMsg', TypeInfo(Binary), AMsg, []);
    __Message.Read('AMsgInfo', TypeInfo(CsHorse2Library_Intf.TMsgInfo), AMsgInfo, []);
    __Message.Read('AErrMsg', TypeInfo(String), AErrMsg, []);

    lResult := (__Instance as ICallbackService).SendMsg(AInfo, ARecver, AMsg, AMsgInfo, AErrMsg);

    __Message.InitializeResponseMessage(__Transport, 'CsHorse2Library', 'CallbackService', 'SendMsgResponse');
    __Message.Write('Result', TypeInfo(Boolean), lResult, []);
    __Message.Write('AErrMsg', TypeInfo(String), AErrMsg, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(AInfo);
      __lObjectDisposer.Add(ARecver);
      __lObjectDisposer.Add(AMsg);
      __lObjectDisposer.Add(AMsgInfo);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TCallbackService_Invoker.Invoke_GetMsgList(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function GetMsgList(const AInfo: TLoginInfo): Binary; }
var
  AInfo: CsHorse2Library_Intf.TLoginInfo;
  lResult: Binary;
  __lObjectDisposer: TROObjectDisposer;
begin
  AInfo := nil;
  lResult := nil;
  try
    __Message.Read('AInfo', TypeInfo(CsHorse2Library_Intf.TLoginInfo), AInfo, []);

    lResult := (__Instance as ICallbackService).GetMsgList(AInfo);

    __Message.InitializeResponseMessage(__Transport, 'CsHorse2Library', 'CallbackService', 'GetMsgListResponse');
    __Message.Write('Result', TypeInfo(Binary), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(AInfo);
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TCallbackService_Invoker.Invoke_GetMsg(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function GetMsg(const AInfo: TLoginInfo; const AMsgInfo: TMsgInfo): Binary; }
var
  AInfo: CsHorse2Library_Intf.TLoginInfo;
  AMsgInfo: CsHorse2Library_Intf.TMsgInfo;
  lResult: Binary;
  __lObjectDisposer: TROObjectDisposer;
begin
  AInfo := nil;
  AMsgInfo := nil;
  lResult := nil;
  try
    __Message.Read('AInfo', TypeInfo(CsHorse2Library_Intf.TLoginInfo), AInfo, []);
    __Message.Read('AMsgInfo', TypeInfo(CsHorse2Library_Intf.TMsgInfo), AMsgInfo, []);

    lResult := (__Instance as ICallbackService).GetMsg(AInfo, AMsgInfo);

    __Message.InitializeResponseMessage(__Transport, 'CsHorse2Library', 'CallbackService', 'GetMsgResponse');
    __Message.Write('Result', TypeInfo(Binary), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(AInfo);
      __lObjectDisposer.Add(AMsgInfo);
      __lObjectDisposer.Add(lResult);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

procedure TCallbackService_Invoker.Invoke_GetOraSysDate(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ function GetOraSysDate(const ACompCode: String): String; }
var
  ACompCode: String;
  lResult: String;
begin
  try
    __Message.Read('ACompCode', TypeInfo(String), ACompCode, []);

    lResult := (__Instance as ICallbackService).GetOraSysDate(ACompCode);

    __Message.InitializeResponseMessage(__Transport, 'CsHorse2Library', 'CallbackService', 'GetOraSysDateResponse');
    __Message.Write('Result', TypeInfo(String), lResult, []);
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

  finally
  end;
end;

procedure TCallbackService_Invoker.Invoke_SetMsgRead(const __Instance:IInterface; const __Message:IROMessage; const __Transport:IROTransport; out __oResponseOptions:TROResponseOptions);
{ procedure SetMsgRead(const AInfo: TLoginInfo; const AMsgInfo: TMsgInfo); }
var
  AInfo: CsHorse2Library_Intf.TLoginInfo;
  AMsgInfo: CsHorse2Library_Intf.TMsgInfo;
  __lObjectDisposer: TROObjectDisposer;
begin
  AInfo := nil;
  AMsgInfo := nil;
  try
    __Message.Read('AInfo', TypeInfo(CsHorse2Library_Intf.TLoginInfo), AInfo, []);
    __Message.Read('AMsgInfo', TypeInfo(CsHorse2Library_Intf.TMsgInfo), AMsgInfo, []);

    (__Instance as ICallbackService).SetMsgRead(AInfo, AMsgInfo);

    __Message.InitializeResponseMessage(__Transport, 'CsHorse2Library', 'CallbackService', 'SetMsgReadResponse');
    __Message.Finalize;
    __Message.UnsetAttributes(__Transport);

    __oResponseOptions := [roNoResponse];

  finally
    __lObjectDisposer := TROObjectDisposer.Create(__Instance);
    try
      __lObjectDisposer.Add(AInfo);
      __lObjectDisposer.Add(AMsgInfo);
    finally
      __lObjectDisposer.Free();
    end;
  end;
end;

initialization
end.
